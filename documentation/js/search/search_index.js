var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AddNewPlantComponent.html",[0,0.535,1,0.92]],["body/components/AddNewPlantComponent.html",[0,0.691,1,1.321,2,1.362,3,0.184,4,0.162,5,0.97,6,0.97,7,0.97,8,0.162,9,4.519,10,0.81,11,2.093,12,0.817,13,1.865,14,0.97,15,2.516,16,2.116,17,2.881,18,1.454,19,3.701,20,0.253,21,0.714,22,2.329,23,4.603,24,2.587,25,5.281,26,4.439,27,3.948,28,0.714,29,2.071,30,4.93,31,1.555,32,0.015,33,0.545,34,2.469,35,5.544,36,2.144,37,1.938,38,0.853,39,3.701,40,0.477,41,0.025,42,0.902,43,0.762,44,0.477,45,0.705,46,0.303,47,2.469,48,2.469,49,0.666,50,0.744,51,2.469,52,2.469,53,1.597,54,4.439,55,2.469,56,2.469,57,0.393,58,1.037,59,1.661,60,0.445,61,2.469,62,1.846,63,1.513,64,1.661,65,1.39,66,1.193,67,1.661,68,0.184,69,1.037,70,1.037,71,0.909,72,2.469,73,2.469,74,2.469,75,4.439,76,2.469,77,2.469,78,1.285,79,1.846,80,2.469,81,2.469,82,2.469,83,2.469,84,2.469,85,2.469,86,2.469,87,2.093,88,2.469,89,3.685,90,5.544,91,3.685,92,3.701,93,3.701,94,0.621,95,1.454,96,1.454,97,0.97,98,1.938,99,0.97,100,0.97,101,0.705,102,0.852,103,1.938,104,0.751,105,0.852,106,0.97,107,0.705,108,0.852,109,0.751,110,1.944,111,0.97,112,0.705,113,0.909,114,0.751,115,1.35,116,0.97,117,0.751,118,0.97,119,0.705,120,0.751,121,0.97,122,0.751,123,0.97,124,0.97,125,0.97,126,0.009,127,0.013,128,0.009]],["title/modules/AddNewPlantModule.html",[129,1.113,130,2.105]],["body/modules/AddNewPlantModule.html",[1,1.868,3,0.322,4,0.284,8,0.284,9,3.234,10,0.669,16,1.593,32,0.015,41,0.025,57,0.467,60,0.779,62,3.234,68,0.322,94,1.087,126,0.015,127,0.019,128,0.015,129,1.402,130,4.11,131,1.818,132,1.947,133,3.11,134,2.09,135,2.839,136,2.887,137,3.668,138,3.668,139,3.668,140,2.839,141,2.252,142,2.09,143,4.327,144,2.839,145,5.456,146,3.343,147,2.436,148,2.91,149,2.252]],["title/classes/Alert.html",[32,0.012,150,2.31]],["body/classes/Alert.html",[3,0.316,4,0.279,8,0.279,10,0.52,12,1.19,20,0.435,21,1.041,28,1.041,32,0.014,38,0.899,40,0.82,41,0.025,42,0.613,43,0.899,44,0.82,46,0.661,49,0.765,50,0.904,53,2.019,57,0.316,68,0.316,126,0.015,127,0.019,128,0.015,150,3.626,151,1.669,152,3.6,153,2.151,154,5.924,155,3.083,156,5.022,157,2.426,158,4.246,159,2.426,160,4.246,161,4.246,162,3.036,163,4.246,164,2.489,165,2.391,166,4.246,167,4.246,168,4.246,169,4.246,170,4.246,171,4.246]],["title/injectables/AlertsControlService.html",[172,1.545,173,2.567]],["body/injectables/AlertsControlService.html",[3,0.327,4,0.289,8,0.289,20,0.45,21,1.064,24,2.529,32,0.015,33,0.971,38,0.795,40,0.849,41,0.025,42,0.634,43,0.795,44,0.849,45,1.255,46,0.539,53,1.786,57,0.47,60,0.792,68,0.327,71,1.619,126,0.015,127,0.019,128,0.015,172,2.48,173,4.12,174,2.695,175,5.104,176,2.695,177,4.05,178,2.958,179,4.461,180,4.673,181,3.708,182,2.695,183,2.695,184,3.729,185,2.958,186,2.695,187,2.958,188,2.695]],["title/components/AlertsHubComponent.html",[0,0.535,101,0.98]],["body/components/AlertsHubComponent.html",[0,0.855,1,0.972,2,1.792,3,0.27,4,0.238,5,1.426,6,1.426,7,1.426,8,0.238,10,0.445,12,1.074,13,2.307,14,1.426,15,2.688,16,1.336,18,1.913,20,0.371,28,0.939,29,2.464,31,2.044,32,0.019,33,1.212,38,0.792,41,0.024,42,0.702,45,1.036,46,0.445,49,0.653,50,0.608,57,0.27,58,1.525,60,0.653,68,0.27,69,1.525,70,1.525,94,0.912,95,1.913,96,1.913,97,1.426,98,2.305,99,1.426,100,1.426,101,1.674,102,2.221,103,2.305,104,1.104,105,1.253,106,1.426,107,1.036,108,1.253,109,1.104,110,2.252,111,1.426,112,1.036,113,1.336,114,1.104,115,1.956,116,1.426,117,1.104,118,1.426,119,1.036,120,1.104,121,1.426,122,1.104,123,1.426,124,1.426,125,1.426,126,0.013,127,0.017,128,0.013,189,4.385,190,2.224,191,3.273,192,4.866,193,3.077,194,4.866]],["title/modules/AlertsHubModule.html",[129,1.113,195,2.105]],["body/modules/AlertsHubModule.html",[3,0.329,4,0.29,8,0.29,32,0.015,41,0.025,57,0.449,60,0.796,68,0.329,94,1.112,101,1.996,102,1.527,126,0.015,127,0.019,128,0.015,129,1.433,131,1.858,132,1.99,133,3.141,134,2.136,135,2.878,136,2.916,140,2.878,141,2.301,142,2.136,144,2.878,146,3.39,147,2.49,149,2.301,189,3.306,195,4.129,196,3.749,197,3.749,198,3.749,199,2.975,200,2.71]],["title/components/AppComponent.html",[0,0.535,104,1.044]],["body/components/AppComponent.html",[0,0.845,1,0.951,2,1.765,3,0.264,4,0.233,5,1.395,6,1.395,7,1.395,8,0.233,10,0.435,14,1.395,15,2.679,16,1.307,18,1.884,20,0.363,21,0.925,27,4.057,32,0.012,33,0.783,36,2.316,37,2.284,38,0.691,40,0.685,41,0.025,42,0.783,43,0.691,44,0.685,45,1.013,46,0.435,53,1.15,57,0.432,60,0.639,65,1.998,66,2.622,68,0.264,71,1.307,94,0.892,95,1.884,96,1.884,97,1.395,98,2.284,99,1.395,100,1.395,101,1.013,102,1.225,103,2.284,104,1.767,105,1.874,106,1.395,107,1.013,108,1.225,109,1.079,110,2.235,111,1.395,112,1.013,113,1.307,114,1.079,115,1.65,116,1.395,117,1.079,118,1.395,119,1.013,120,1.079,121,1.395,122,1.079,123,1.395,124,1.395,125,1.395,126,0.012,127,0.017,128,0.012,188,2.938,201,3.549,202,3.009,203,4.793,204,5.428,205,4.793,206,2.653,207,4.793,208,3.583,209,1.998,210,3.549,211,1.847,212,1.847,213,3.009,214,2.653]],["title/modules/AppModule.html",[129,1.113,215,2.31]],["body/modules/AppModule.html",[1,1.37,3,0.236,4,0.208,8,0.208,10,0.544,32,0.011,41,0.025,57,0.505,60,0.571,63,2.718,64,2.132,68,0.236,94,0.797,104,2.021,105,1.094,109,1.838,122,1.838,126,0.011,127,0.015,128,0.011,129,1.027,130,3.703,131,1.331,132,1.426,133,2.662,134,2.471,135,2.308,136,1.531,140,2.308,141,1.649,142,1.531,144,2.308,148,2.132,149,2.308,182,1.942,195,3.703,215,4.694,216,2.687,217,2.687,218,2.687,219,2.687,220,3.703,221,3.703,222,3.703,223,3.703,224,3.169,225,4.435,226,4.435,227,2.687,228,2.369,229,4.435,230,3.169,231,3.169,232,3.169,233,3.169,234,3.169,235,3.169,236,3.169,237,3.315,238,3.169,239,2.687,240,5.541,241,2.687,242,2.687,243,3.169,244,3.169,245,3.169]],["title/modules/AppRoutingModule.html",[129,1.113,220,2.105]],["body/modules/AppRoutingModule.html",[0,0.99,1,1.409,3,0.304,4,0.268,8,0.268,10,0.501,32,0.014,41,0.025,57,0.492,60,0.735,68,0.304,78,2.125,101,1.501,102,1.41,107,1.501,108,1.41,112,1.501,119,1.501,126,0.014,127,0.018,128,0.014,131,1.716,136,1.973,144,2.736,148,2.747,149,2.125,200,3.764,220,3.223,237,3.053,239,3.462,241,3.462,242,3.462,246,4.084,247,4.084,248,3.912,249,5.259,250,3.053,251,4.084,252,6.507,253,4.084,254,5.259,255,4.084,256,4.084,257,4.084,258,3.462,259,4.084]],["title/classes/ArtificialLight.html",[32,0.012,183,2.105]],["body/classes/ArtificialLight.html",[3,0.332,4,0.293,8,0.293,12,1.227,20,0.456,21,1.073,28,1.073,32,0.015,38,0.874,40,0.861,41,0.025,42,0.643,43,0.874,44,0.861,46,0.681,49,0.803,50,0.932,57,0.332,68,0.332,126,0.016,127,0.019,128,0.016,151,1.753,153,2.19,157,2.502,162,3.131,164,1.874,183,3.407,260,3.781,261,2.927,262,4.529,263,3.064,264,4.459,265,4.459,266,4.459,267,4.459,268,4.459,269,2.511,270,4.459]],["title/injectables/ArtificialLightControlService.html",[172,1.545,209,1.934]],["body/injectables/ArtificialLightControlService.html",[3,0.25,4,0.22,8,0.22,10,0.646,20,0.343,21,0.89,22,2.872,24,2.215,28,0.89,32,0.011,33,0.741,38,0.909,40,0.648,41,0.025,42,0.484,43,0.819,44,0.648,45,1.317,46,0.646,49,0.949,50,0.562,53,1.495,57,0.422,59,4.004,60,0.604,68,0.25,71,1.235,126,0.012,127,0.016,128,0.012,172,2.076,174,2.056,176,2.056,177,3.547,178,2.257,179,4.138,180,2.844,181,3.103,182,2.056,183,3.48,184,2.844,185,4.004,186,2.056,187,2.257,188,2.056,209,2.598,211,3.341,271,4.318,272,5.273,273,5.273,274,5.679,275,5.679,276,5.679,277,3.449,278,3.355,279,3.355,280,3.355,281,2.844,282,3.355,283,3.942,284,3.355,285,3.355,286,3.355,287,1.699,288,3.355,289,3.355]],["title/classes/CurrentLogs.html",[32,0.012,290,1.659]],["body/classes/CurrentLogs.html",[3,0.235,4,0.207,8,0.207,10,0.74,12,1.127,20,0.323,21,0.854,32,0.02,33,1.127,38,0.798,41,0.025,43,0.736,46,0.387,50,0.856,57,0.235,68,0.47,126,0.011,127,0.015,128,0.011,151,1.241,153,2.01,155,1.643,159,1.42,164,2.7,165,2.874,261,1.525,263,2.466,269,1.777,287,1.879,290,2.136,291,1.643,292,2.846,293,2.846,294,2.846,295,4.422,296,3.157,297,3.157,298,2.656,299,1.777,300,2.735,301,3.128,302,1.777,303,1.777,304,1.934,305,1.241,306,3.128,307,3.128,308,3.128,309,3.128,310,3.128,311,3.128,312,3.128,313,1.934,314,1.777,315,1.643,316,1.934,317,1.934,318,1.934,319,1.934,320,1.934,321,1.934,322,1.934,323,1.934,324,2.297,325,1.934,326,1.934]],["title/components/GraphsHubComponent.html",[0,0.535,107,0.98]],["body/components/GraphsHubComponent.html",[0,0.531,1,0.44,2,0.99,3,0.122,4,0.108,5,0.646,6,0.646,7,0.646,8,0.108,10,0.533,12,0.594,13,1.434,14,0.646,15,2.287,16,0.605,18,1.057,20,0.168,21,0.519,22,2.66,24,2.07,28,0.519,29,1.656,31,1.13,32,0.012,33,0.363,36,1.299,37,1.549,38,0.825,40,0.659,41,0.025,42,0.627,43,0.84,44,0.659,45,1.241,46,0.63,49,0.614,50,0.451,53,1.277,57,0.347,58,0.691,60,0.296,65,0.926,66,1.299,67,1.106,68,0.122,69,0.691,70,0.691,71,0.605,78,2.675,94,0.413,95,1.057,96,1.057,97,0.646,98,1.549,99,0.646,100,0.646,101,0.469,102,0.568,103,1.549,104,0.5,105,0.568,106,0.646,107,1.125,108,1.701,109,0.5,110,1.601,111,0.646,112,0.469,113,0.605,114,0.5,115,1.498,116,0.646,117,0.5,118,0.646,119,0.469,120,0.5,121,0.646,122,0.5,123,0.646,124,0.646,125,0.646,126,0.006,127,0.009,128,0.006,164,0.691,190,1.008,191,1.809,206,1.229,211,1.399,212,2.052,213,1.394,287,1.451,292,1.774,293,1.774,294,1.774,300,2.07,305,1.549,327,4.934,328,3.412,329,3.412,330,2.893,331,2.893,332,3.412,333,3.412,334,2.689,335,2.689,336,2.893,337,2.689,338,1.394,339,1.644,340,2.689,341,1.644,342,1.229,343,2.689,344,3.412,345,3.686,346,1.644,347,1.644,348,2.689,349,1.394,350,2.689,351,1.394,352,1.644,353,2.689,354,1.644,355,1.644,356,2.689,357,1.394,358,1.106,359,1.106,360,1.106,361,1.644,362,1.776,363,1.394,364,1.008,365,1.644,366,2.893,367,2.893,368,3.412,369,2.28,370,2.28,371,3.412,372,3.412,373,3.412,374,2.893,375,3.412,376,2.893,377,3.412,378,2.86,379,3.412,380,2.893,381,2.893,382,4.176,383,1.394,384,2.689,385,2.01,386,1.394,387,2.01,388,1.394,389,2.893,390,3.957,391,3.412,392,1.394,393,2.893,394,3.412,395,1.394,396,3.412,397,1.394,398,1.394,399,1.394,400,1.394,401,1.394,402,1.394,403,1.394,404,1.394,405,1.394,406,1.106,407,1.229,408,1.644,409,1.229,410,1.229,411,1.394,412,1.394,413,2.551,414,2.893,415,1.394,416,1.394,417,1.394,418,1.394,419,1.394,420,1.394,421,1.394,422,1.644,423,1.644,424,1.644]],["title/modules/GraphsHubModule.html",[129,1.113,221,2.105]],["body/modules/GraphsHubModule.html",[3,0.329,4,0.29,8,0.29,32,0.015,41,0.025,57,0.449,60,0.796,68,0.329,94,1.112,107,1.996,108,1.527,126,0.015,127,0.019,128,0.015,129,1.433,131,1.858,132,1.99,133,3.141,134,2.136,135,2.878,136,2.916,140,2.878,141,2.301,142,2.136,144,2.878,146,3.39,147,2.49,149,2.301,199,2.975,200,2.71,221,4.129,425,3.749,426,3.749,427,3.749,428,4.422]],["title/components/HeaderComponent.html",[0,0.535,109,1.044]],["body/components/HeaderComponent.html",[0,0.859,1,0.981,2,1.803,3,0.272,4,0.24,5,1.439,6,1.439,7,1.439,8,0.24,10,0.449,12,1.081,13,2.317,14,1.439,15,2.691,16,1.348,18,1.924,20,0.375,28,0.945,29,2.474,31,2.057,32,0.019,33,1.218,38,0.796,41,0.025,42,0.706,45,1.045,46,0.449,49,0.659,50,0.614,57,0.272,58,1.539,60,0.659,68,0.272,69,1.539,70,1.539,94,0.921,95,1.924,96,1.924,97,1.439,98,2.314,99,1.439,100,1.439,101,1.045,102,1.264,103,2.314,104,1.114,105,1.264,106,1.439,107,1.045,108,1.264,109,1.79,110,2.442,111,1.439,112,1.045,113,1.348,114,1.114,115,1.677,116,1.439,117,1.114,118,1.439,119,1.045,120,1.114,121,1.439,122,1.114,123,1.439,124,1.439,125,1.439,126,0.013,127,0.017,128,0.013,156,4.991,208,3.66,429,3.105,430,4.896,431,4.896,432,3.663]],["title/components/InformationHubComponent.html",[0,0.535,112,0.98]],["body/components/InformationHubComponent.html",[0,0.652,1,0.601,2,1.267,3,0.167,4,0.147,5,1.353,6,0.882,7,0.882,8,0.147,10,0.422,12,0.76,13,1.759,14,0.882,15,2.467,16,0.826,17,2.789,18,1.353,20,0.23,21,0.664,22,2.245,23,3.13,24,2.567,28,0.664,29,1.972,31,1.446,32,0.016,33,0.495,36,2.023,37,1.845,38,0.894,40,0.664,41,0.025,42,0.771,43,0.771,44,0.664,45,0.641,46,0.275,49,0.962,50,0.933,53,1.115,57,0.377,58,0.943,60,0.404,63,1.375,64,1.509,65,1.263,66,1.084,67,1.509,68,0.167,69,0.943,70,0.943,71,0.826,79,2.573,89,2.573,91,2.573,94,0.564,95,1.353,96,1.353,97,0.882,98,1.845,99,0.882,100,0.882,101,0.641,102,1.445,103,1.845,104,0.682,105,0.775,106,0.882,107,0.641,108,0.775,109,0.682,110,1.864,111,0.882,112,1.34,113,2.048,114,0.682,115,1.691,116,0.882,117,0.682,118,0.882,119,0.641,120,0.682,121,0.882,122,0.682,123,0.882,124,0.882,125,0.882,126,0.008,127,0.012,128,0.008,190,1.375,191,2.315,193,1.902,214,1.677,250,1.677,258,2.918,263,1.663,287,0.826,342,2.573,349,2.918,351,1.902,357,1.902,364,1.375,378,1.375,410,1.677,433,4.692,434,4.187,435,4.187,436,4.187,437,4.187,438,4.695,439,4.695,440,5.343,441,4.695,442,3.442,443,2.244,444,4.695,445,3.549,446,3.98,447,3.442,448,2.244,449,2.244,450,2.244,451,2.244,452,2.244,453,3.442,454,4.695,455,2.244,456,2.244,457,2.244,458,2.244,459,2.244,460,2.244,461,2.244,462,2.244,463,2.244,464,2.244,465,2.244,466,2.244,467,2.244,468,2.244,469,1.902,470,2.244,471,2.244,472,2.244,473,4.187,474,1.677,475,3.442,476,2.918,477,2.244,478,3.442,479,3.442,480,2.918,481,2.918,482,4.695,483,3.442,484,3.442,485,3.442,486,3.442]],["title/modules/InformationHubModule.html",[129,1.113,222,2.105]],["body/modules/InformationHubModule.html",[3,0.329,4,0.29,8,0.29,32,0.015,41,0.025,57,0.449,60,0.796,68,0.329,94,1.112,112,1.996,113,1.628,126,0.015,127,0.019,128,0.015,129,1.433,131,1.858,132,1.99,133,3.141,134,2.136,135,2.878,136,2.916,140,2.878,141,2.301,142,2.136,144,2.878,146,3.39,147,2.49,149,2.301,199,2.975,200,2.71,222,4.129,433,3.306,487,3.749,488,3.749,489,3.749]],["title/classes/Log.html",[32,0.012,300,1.443]],["body/classes/Log.html",[3,0.24,4,0.212,8,0.212,10,0.745,12,1.14,20,0.33,21,0.867,32,0.02,33,0.712,38,0.648,41,0.025,43,0.648,46,0.633,50,0.866,57,0.24,68,0.473,126,0.011,127,0.016,128,0.011,151,1.268,153,2.027,155,2.688,159,2.021,164,2.713,165,2.908,261,1.559,263,2.495,269,1.817,287,1.902,290,1.559,291,1.679,292,2.641,293,2.641,294,2.641,298,2.688,299,1.817,300,2.776,301,3.165,302,1.817,303,1.817,304,1.977,305,1.765,306,3.165,307,3.165,308,3.165,309,3.165,310,3.165,311,3.165,312,3.165,313,1.977,314,1.817,315,1.679,316,1.977,317,1.977,318,1.977,319,1.977,320,1.977,321,1.977,322,1.977,323,1.977,324,2.324,325,1.977,326,1.977,490,3.227,491,3.227]],["title/injectables/LogsControlService.html",[172,1.545,212,1.787]],["body/injectables/LogsControlService.html",[3,0.194,4,0.171,8,0.171,10,0.717,17,2.431,20,0.267,21,0.744,22,2.882,24,1.925,28,0.744,32,0.009,33,0.575,38,0.9,40,1.043,41,0.025,42,0.779,43,0.885,44,1.043,45,1.445,46,0.621,49,0.973,50,0.768,53,1.248,57,0.421,59,4.126,60,0.469,68,0.194,71,0.959,78,1.356,126,0.009,127,0.013,128,0.009,172,1.733,174,1.597,176,1.597,177,3.082,178,1.753,179,3.804,181,2.591,182,1.597,185,3.935,186,1.597,187,1.753,188,1.597,212,2.005,277,1.948,283,1.948,287,1.687,290,2.902,362,3.333,378,1.597,406,3.935,407,1.948,409,1.948,492,4.256,493,4.583,494,4.583,495,5.063,496,3.852,497,3.852,498,3.852,499,3.852,500,3.852,501,2.606,502,3.852,503,2.606,504,3.852,505,2.606,506,3.852,507,2.606,508,3.852,509,2.606,510,2.209,511,2.606,512,2.209,513,2.209,514,2.606,515,2.209,516,4.794,517,3.852,518,2.606,519,2.606,520,3.852,521,2.606,522,2.606,523,3.852,524,2.606,525,2.606,526,2.606,527,2.606,528,2.606]],["title/classes/LogsRequest.html",[32,0.012,362,1.787]],["body/classes/LogsRequest.html",[3,0.325,4,0.286,8,0.286,10,0.672,12,0.963,20,0.446,21,1.058,28,1.058,32,0.019,38,0.865,40,0.842,41,0.025,42,0.629,43,0.865,44,0.842,46,0.535,49,0.785,50,1.005,53,2.039,57,0.325,68,0.408,126,0.015,127,0.019,128,0.015,151,1.714,153,2.071,157,2.467,162,3.377,305,2.155,362,2.854,529,3.261,530,5.085,531,4.484,532,4.362,533,4.362,534,4.362,535,2.456,536,3.698,537,3.698,538,4.649,539,4.649,540,4.649]],["title/components/MainHubAlertComponent.html",[0,0.535,114,1.044]],["body/components/MainHubAlertComponent.html",[0,0.804,1,0.864,2,1.653,3,0.24,4,0.212,5,1.268,6,1.268,7,1.268,8,0.212,10,0.55,12,0.991,13,2.17,14,1.268,15,2.64,16,1.188,17,2.021,18,1.765,20,0.33,21,0.867,22,2.17,28,0.867,29,2.346,31,1.887,32,0.018,33,1.14,38,0.806,41,0.024,42,0.648,43,0.465,45,0.921,46,0.395,49,0.581,50,0.541,53,1.455,57,0.24,58,1.356,60,0.581,68,0.24,69,1.356,70,1.356,94,0.811,95,1.765,96,1.765,97,1.268,98,2.195,99,1.268,100,1.268,101,0.921,102,1.783,103,2.195,104,0.981,105,1.114,106,1.268,107,0.921,108,1.114,109,0.981,110,2.433,111,1.268,112,0.921,113,1.188,114,1.698,115,2.056,116,1.268,117,0.981,118,1.268,119,0.921,120,0.981,121,1.268,122,0.981,123,1.268,124,1.268,125,1.268,126,0.011,127,0.016,128,0.011,150,3.756,159,2.806,211,2.337,261,2.169,315,2.906,541,4.977,542,2.735,543,4.491,544,4.491,545,3.227,546,3.227,547,3.227,548,3.227,549,4.491,550,4.491,551,4.491,552,4.491,553,4.491]],["title/components/MainHubButtonsComponent.html",[0,0.535,117,1.044]],["body/components/MainHubButtonsComponent.html",[0,0.541,1,0.452,2,1.01,3,0.125,4,0.111,5,0.662,6,0.662,7,0.662,8,0.111,10,0.579,12,0.606,13,1.459,14,0.662,15,2.303,16,0.621,18,1.079,20,0.173,21,0.53,22,2.611,24,1.851,28,0.53,29,1.681,31,1.153,32,0.012,33,0.372,36,1.677,37,1.573,38,0.796,40,0.53,41,0.025,42,0.577,43,0.577,44,0.53,45,0.481,46,0.49,49,0.85,50,0.9,57,0.37,58,0.708,60,0.304,66,1.677,68,0.258,69,0.708,70,0.708,71,0.621,78,3.095,94,0.424,95,1.079,96,1.079,97,0.662,98,1.573,99,0.662,100,0.662,101,0.481,102,0.582,103,1.573,104,0.513,105,0.582,106,0.662,107,0.481,108,0.582,109,0.513,110,2.079,111,0.662,112,0.481,113,0.621,114,0.513,115,1.92,116,0.662,117,1.217,118,0.662,119,0.481,120,0.513,121,0.662,122,0.513,123,0.662,124,0.662,125,0.662,126,0.006,127,0.01,128,0.006,155,1.807,164,0.708,209,2.253,211,2.458,212,2.082,261,2.128,262,2.052,271,1.134,287,1.473,292,1.801,293,1.801,294,1.801,300,2.092,314,0.949,315,0.877,324,0.758,336,2.943,342,3.53,358,1.134,359,1.134,360,1.134,362,1.807,364,1.033,382,2.327,385,1.26,387,1.26,388,1.429,389,2.943,390,2.943,392,1.429,395,1.429,397,1.429,398,1.429,399,1.429,400,1.429,401,1.429,402,1.429,403,1.429,404,1.429,405,1.429,406,1.134,407,1.26,409,1.26,410,1.26,411,1.429,412,1.429,413,2.595,414,2.943,415,1.429,416,1.429,417,1.429,418,1.429,419,1.429,420,1.429,421,1.429,474,2.052,492,1.134,554,3.799,555,1.134,556,4.002,557,2.745,558,4.405,559,4.405,560,4.002,561,2.745,562,4.002,563,4.002,564,4.002,565,1.686,566,2.745,567,2.327,568,1.686,569,1.686,570,1.686,571,2.745,572,1.686,573,1.686,574,1.686,575,1.686,576,2.943,577,2.943,578,1.686,579,1.686,580,1.26,581,1.846,582,2.327,583,1.429,584,1.686,585,1.134,586,1.686,587,1.26,588,1.686,589,2.745,590,2.327,591,2.327,592,1.686,593,3.472,594,1.686,595,3.472,596,2.745,597,3.472,598,1.686,599,3.472,600,2.745,601,1.686,602,1.686,603,1.686,604,4.979,605,3.472,606,1.686,607,3.472,608,3.472,609,3.472,610,3.472,611,1.686,612,1.686,613,1.686,614,1.686,615,1.686,616,1.686,617,3.53,618,3.472,619,3.472,620,1.429,621,1.686,622,2.745,623,1.686,624,1.686,625,1.686,626,1.686,627,1.686,628,1.686,629,1.686,630,1.686,631,1.429,632,2.745,633,2.745,634,2.745,635,2.745]],["title/components/MainHubComponent.html",[0,0.535,119,0.98]],["body/components/MainHubComponent.html",[0,0.836,1,0.93,2,1.739,3,0.258,4,0.228,5,1.364,6,1.364,7,1.364,8,0.228,10,0.426,12,1.043,13,2.255,14,1.364,15,2.67,16,1.278,18,1.856,20,0.355,28,0.912,29,2.42,31,1.984,32,0.018,33,0.766,36,2.281,37,2.264,38,0.774,40,0.67,41,0.025,42,0.774,43,0.501,44,0.67,45,0.991,46,0.426,49,0.625,50,0.582,57,0.351,58,1.459,60,0.625,65,1.955,66,1.677,68,0.258,69,1.459,70,1.459,71,1.278,94,0.873,95,1.856,96,1.856,97,1.364,98,2.264,99,1.364,100,1.364,101,0.991,102,1.199,103,2.264,104,1.056,105,1.199,106,1.364,107,0.991,108,1.199,109,1.056,110,2.466,111,1.364,112,0.991,113,1.278,114,1.056,115,1.934,116,1.364,117,1.056,118,1.364,119,1.644,120,1.056,121,1.364,122,1.056,123,1.364,124,1.364,125,1.364,126,0.012,127,0.016,128,0.012,190,2.128,191,3.177,206,2.595,338,2.943,636,4.306,637,4.723,638,4.723,639,4.723]],["title/components/MainHubGraphComponent.html",[0,0.535,120,1.044]],["body/components/MainHubGraphComponent.html",[0,0.571,1,0.489,2,1.078,3,0.136,4,0.12,5,0.718,6,0.718,7,0.718,8,0.12,10,0.224,12,0.646,13,1.54,14,0.718,15,2.351,16,0.672,18,1.151,20,0.187,21,0.565,22,2.788,24,1.928,28,0.565,29,1.762,31,1.23,32,0.012,33,0.403,36,1.771,37,1.648,38,0.863,40,0.352,41,0.025,42,0.529,43,0.816,44,0.352,45,0.521,46,0.631,49,0.527,50,0.491,57,0.312,58,0.767,60,0.329,66,1.771,68,0.136,69,0.767,70,0.767,71,0.672,94,0.459,95,1.151,96,1.151,97,0.718,98,1.648,99,0.718,100,0.718,101,0.521,102,0.63,103,1.648,104,0.555,105,0.63,106,0.718,107,0.521,108,0.63,109,0.555,110,2.129,111,0.718,112,0.521,113,0.672,114,0.555,115,1.983,116,0.718,117,0.555,118,0.718,119,0.521,120,1.275,121,0.718,122,0.555,123,0.718,124,0.718,125,0.718,126,0.006,127,0.01,128,0.006,209,2.361,211,1.907,212,2.182,262,2.189,271,1.228,305,2.315,324,2.483,330,3.107,331,3.107,345,1.548,366,3.107,367,3.107,369,1.548,370,1.548,376,2.482,378,3.381,380,3.107,381,3.107,383,1.548,385,1.365,386,1.548,387,1.365,393,3.107,492,1.228,567,3.107,585,1.228,617,2.189,620,1.548,631,1.548,640,5.141,641,1.548,642,3.555,643,2.928,644,3.665,645,3.665,646,3.665,647,3.665,648,3.665,649,3.665,650,3.665,651,4.193,652,1.826,653,2.928,654,2.928,655,1.826,656,1.826,657,1.826,658,1.826,659,1.826,660,1.826,661,1.826,662,1.826,663,1.826,664,1.826,665,1.826,666,1.826,667,3.665,668,3.665,669,1.826,670,1.826,671,1.826,672,1.826,673,3.665,674,1.826,675,1.826,676,1.826,677,1.826,678,1.826,679,1.826,680,2.928,681,1.826,682,3.665,683,1.826,684,1.826,685,1.826,686,1.826,687,3.665,688,1.826,689,1.826,690,1.826,691,2.928,692,1.826,693,1.826,694,1.826,695,1.826,696,1.826,697,2.928,698,1.826,699,1.826,700,2.928,701,2.928,702,4.899,703,4.899,704,2.928,705,2.928,706,1.826,707,1.826,708,1.826,709,1.826,710,4.153,711,1.826,712,2.928,713,1.826,714,1.826,715,1.826,716,1.826,717,1.826,718,2.928,719,1.826,720,1.826,721,1.826,722,1.826,723,2.928,724,2.928,725,1.826,726,1.826,727,1.826,728,1.826,729,2.928,730,1.826,731,1.826,732,1.826,733,1.826,734,1.826,735,1.826,736,1.826,737,1.826,738,3.665,739,1.826,740,1.826,741,2.928,742,1.826,743,1.826,744,1.826,745,3.665,746,1.826,747,1.826,748,1.826]],["title/modules/MainHubModule.html",[129,1.113,223,2.105]],["body/modules/MainHubModule.html",[3,0.259,4,0.229,8,0.229,32,0.012,41,0.025,57,0.499,60,0.628,68,0.259,94,0.876,110,1.284,114,2.054,115,1.636,117,2.054,119,1.928,120,2.054,126,0.012,127,0.017,128,0.012,129,1.13,131,1.465,132,1.569,133,2.799,134,1.685,135,2.465,136,2.599,140,2.465,141,1.815,142,1.685,144,2.465,146,2.903,147,1.963,149,1.815,199,2.345,200,2.137,223,4.229,636,2.607,749,2.956,750,2.956,751,2.956,752,4.737,753,2.956,754,3.487,755,3.487,756,3.487,757,3.487,758,3.487,759,3.487,760,4.737,761,2.607,762,4.56,763,4.737,764,3.487,765,4.737,766,3.487,767,3.487]],["title/components/NavbarComponent.html",[0,0.535,122,1.044]],["body/components/NavbarComponent.html",[0,0.769,1,1.136,2,1.561,3,0.221,4,0.195,5,1.169,6,1.169,7,1.169,8,0.195,10,0.606,12,0.936,13,2.076,14,1.169,15,2.605,16,1.561,17,1.908,18,1.667,20,0.304,21,0.818,22,2.076,23,4.425,24,2.263,27,2.223,28,0.818,29,2.263,31,1.782,32,0.017,33,0.657,36,2.387,37,2.117,38,0.821,40,0.574,41,0.025,42,0.713,43,0.612,44,0.574,45,0.849,46,0.365,49,0.763,50,0.711,57,0.44,58,1.25,60,0.536,63,1.823,64,2.001,65,1.675,66,1.437,67,2.001,68,0.221,69,1.25,70,1.25,71,1.095,78,1.548,87,2.522,94,0.748,95,1.667,96,1.667,97,1.169,98,2.117,99,1.169,100,1.169,101,0.849,102,1.706,103,2.117,104,0.904,105,1.027,106,1.169,107,0.849,108,1.706,109,0.904,110,2.097,111,1.169,112,0.849,113,1.819,114,0.904,115,1.503,116,1.169,117,0.904,118,1.169,119,0.849,120,0.904,121,1.169,122,1.638,123,2.238,124,1.169,125,1.169,126,0.01,127,0.015,128,0.01,148,2.001,214,2.223,237,2.223,363,2.522,445,3.595,446,4.567,480,3.595,535,1.675,768,2.522,769,4.24,770,5.387,771,2.974,772,4.24,773,2.974,774,2.974,775,2.974,776,2.974,777,4.24,778,2.974,779,2.974,780,2.974,781,2.974,782,2.974]],["title/classes/Plant.html",[17,1.545,32,0.012]],["body/classes/Plant.html",[3,0.258,4,0.228,8,0.228,10,0.426,12,1.043,17,2.125,20,0.355,21,0.912,28,0.912,32,0.012,38,0.917,40,0.67,41,0.025,42,0.831,43,0.917,44,0.67,46,0.579,49,0.625,50,0.792,53,2.149,57,0.258,68,0.399,89,4.012,91,4.012,126,0.012,127,0.016,128,0.012,151,1.364,153,1.989,157,2.125,159,2.415,162,2.659,164,2.255,263,2.281,287,1.739,298,2.458,305,2.109,324,1.562,481,4.55,531,4.012,783,2.595,784,5.367,785,3.472,786,3.472,787,3.472,788,3.472,789,3.472,790,3.472,791,3.472,792,2.943,793,3.472,794,3.472,795,2.943,796,3.472,797,3.472,798,3.472,799,3.472,800,3.472,801,3.472,802,3.472,803,3.472,804,3.472,805,3.472,806,3.472,807,3.472,808,3.472,809,3.472,810,4.723,811,4.723,812,4.723,813,3.472,814,3.472]],["title/injectables/PlantControlService.html",[37,1.35,172,1.545]],["body/injectables/PlantControlService.html",[3,0.205,4,0.181,8,0.181,10,0.637,17,3.064,20,0.282,21,0.774,22,2.872,24,1.988,28,0.774,32,0.009,33,0.608,37,1.577,38,0.897,40,1.003,41,0.025,42,0.75,43,0.88,44,1.003,45,1.351,46,0.58,49,0.936,50,0.871,53,1.3,57,0.411,59,3.717,60,0.496,68,0.205,71,1.014,78,2.088,79,2.999,126,0.01,127,0.014,128,0.01,172,1.805,174,1.688,176,1.688,177,3.183,178,1.853,179,3.879,181,2.698,182,1.688,185,3.717,186,1.688,187,1.853,188,1.688,277,2.059,281,2.335,283,2.059,287,1.477,406,1.853,413,2.059,469,2.335,510,3.401,512,2.335,513,2.335,515,2.335,516,4.012,535,2.664,585,4.251,815,4.732,816,4.732,817,4.732,818,4.012,819,4.012,820,5.199,821,4.012,822,4.012,823,2.754,824,4.012,825,2.754,826,2.754,827,4.012,828,2.754,829,2.754,830,2.754,831,2.754,832,2.754,833,2.754,834,2.754,835,2.754,836,2.754,837,2.754,838,2.754,839,4.012,840,2.754,841,2.754,842,2.754,843,2.754,844,2.754,845,2.754,846,2.754,847,2.754]],["title/classes/RewireRequest.html",[32,0.012,535,1.934]],["body/classes/RewireRequest.html",[3,0.323,4,0.285,8,0.285,10,0.67,12,1.206,20,0.444,21,1.055,28,1.055,32,0.019,38,0.863,40,0.837,41,0.025,42,0.626,43,0.863,44,0.837,46,0.532,49,0.781,50,1.003,53,2.097,57,0.323,68,0.407,126,0.015,127,0.019,128,0.015,151,1.705,153,2.168,157,2.459,162,3.369,305,1.705,362,2.258,529,3.243,530,3.678,531,3.243,535,3.077,536,5.072,537,5.072,538,4.633,539,4.633,540,4.633,848,4.338,849,4.338,850,4.338]],["title/interfaces/Serializable.html",[153,1.186,851,2.31]],["body/interfaces/Serializable.html",[3,0.369,4,0.325,8,0.325,20,0.507,28,1.145,38,0.715,40,0.957,41,0.024,42,0.715,43,0.715,44,0.957,46,0.608,49,0.893,50,0.994,57,0.369,68,0.369,126,0.017,127,0.021,128,0.017,153,2.048,157,2.669,162,3.34,851,3.334,852,4.957,853,4.203,854,4.957,855,4.957,856,4.957]],["title/classes/SunlightLog.html",[32,0.012,292,1.545]],["body/classes/SunlightLog.html",[3,0.226,4,0.199,8,0.199,10,0.731,12,1.2,20,0.311,21,0.831,28,0.831,32,0.02,33,0.67,38,0.784,40,0.586,41,0.025,42,0.438,43,0.784,44,0.586,46,0.613,49,0.547,50,0.911,57,0.226,68,0.466,126,0.011,127,0.015,128,0.011,151,1.193,153,2.058,155,2.601,157,1.936,159,1.936,164,2.676,165,2.814,261,2.415,263,2.627,269,1.71,287,1.84,290,1.467,291,1.58,292,2.682,293,2.583,294,2.583,298,2.601,299,1.71,300,2.794,301,3.063,302,1.71,303,1.71,304,1.861,305,1.691,306,3.332,307,3.332,308,3.332,309,3.063,310,3.063,311,3.063,312,3.063,313,1.861,314,1.71,315,1.58,316,1.861,317,1.861,318,1.861,319,1.861,320,1.861,321,1.861,322,1.861,323,1.861,324,2.249,325,1.861,326,1.861,857,3.037,858,3.217,859,2.27,860,2.27,861,3.037]],["title/classes/TemperatureLog.html",[32,0.012,293,1.545]],["body/classes/TemperatureLog.html",[3,0.229,4,0.202,8,0.202,10,0.734,12,1.207,20,0.315,21,0.838,28,0.838,32,0.02,33,0.679,38,0.726,40,0.594,41,0.025,42,0.444,43,0.726,44,0.594,46,0.617,49,0.554,50,0.917,57,0.229,68,0.467,126,0.011,127,0.015,128,0.011,151,1.21,153,2.067,155,2.62,157,1.955,159,1.955,164,2.684,165,2.835,261,1.487,263,2.432,269,1.733,287,1.854,290,1.487,291,1.602,292,2.596,293,2.694,294,2.596,298,2.62,299,1.733,300,2.8,301,3.085,302,1.733,303,1.733,304,1.886,305,1.707,306,3.352,307,3.352,308,3.352,309,3.085,310,3.085,311,3.085,312,3.085,313,1.886,314,1.733,315,1.602,316,1.886,317,1.886,318,1.886,319,1.886,320,1.886,321,1.886,322,1.886,323,1.886,324,2.265,325,1.886,326,1.886,858,3.247,859,2.3,860,2.3,862,3.078]],["title/classes/WateringLog.html",[32,0.012,294,1.545]],["body/classes/WateringLog.html",[3,0.223,4,0.197,8,0.197,10,0.727,12,1.193,20,0.307,21,0.823,28,0.823,32,0.019,33,0.662,38,0.824,40,0.578,41,0.025,42,0.432,43,0.824,44,0.578,46,0.608,49,0.54,50,0.906,57,0.223,68,0.464,126,0.01,127,0.015,128,0.01,151,1.178,153,2.049,155,2.582,157,1.918,159,1.918,164,2.668,165,2.794,261,1.448,263,2.759,269,1.687,287,1.827,290,1.448,291,1.56,292,2.57,293,2.57,294,2.67,298,2.582,299,1.687,300,2.788,301,3.041,302,1.687,303,1.687,304,1.836,305,1.675,306,3.312,307,3.312,308,3.312,309,3.041,310,3.041,311,3.041,312,3.041,313,1.836,314,2.794,315,2.582,316,1.836,317,1.836,318,1.836,319,1.836,320,1.836,321,1.836,322,1.836,323,1.836,324,2.233,325,1.836,326,1.836,858,3.187,859,2.24,860,2.24,863,2.997,864,2.997,865,2.997]],["title/coverage.html",[866,3.975]],["body/coverage.html",[0,1.017,1,0.812,8,0.199,9,2.266,10,0.527,11,2.57,17,1.364,32,0.022,37,1.191,41,0.025,43,0.437,101,0.865,104,0.922,107,0.865,109,0.922,112,0.865,114,0.922,115,1.744,117,0.922,119,0.865,120,0.922,122,0.922,126,0.011,127,0.015,128,0.011,150,2.039,152,2.57,153,1.046,172,2.444,173,2.266,175,2.57,176,3.329,183,1.857,189,2.266,190,3.329,202,2.57,209,1.706,211,1.577,212,1.577,260,2.57,271,2.039,290,1.464,291,3.257,292,1.364,293,1.364,294,1.364,298,2.985,300,1.273,324,3.191,327,2.57,358,2.039,359,2.039,360,2.039,362,1.577,364,1.857,429,2.57,433,2.266,492,2.039,529,3.212,535,1.706,541,2.57,542,2.57,554,3.358,555,3.358,580,2.266,581,2.039,585,2.039,587,2.266,636,2.266,640,2.57,641,2.57,768,2.57,783,3.732,851,2.039,853,2.57,866,2.57,867,3.031,868,3.031,869,3.031,870,3.031,871,6.126,872,5.433,873,4.993,874,4.297,875,6.367,876,4.297,877,3.031,878,4.297,879,3.031,880,4.297,881,5.433,882,3.031,883,2.57,884,3.643,885,2.57,886,3.031,887,3.031]],["title/dependencies.html",[132,1.859,888,2.868]],["body/dependencies.html",[41,0.025,60,0.817,62,3.39,63,2.779,126,0.016,127,0.02,128,0.016,132,2.041,134,2.714,147,2.554,186,2.779,227,4.764,228,4.2,250,3.39,581,3.779,583,3.845,753,3.845,761,3.39,762,4.764,889,4.535,890,6.901,891,4.535,892,4.535,893,4.535,894,4.535,895,4.535,896,4.535,897,4.535,898,4.535,899,4.535,900,4.535,901,4.535,902,4.535,903,4.535,904,4.535,905,4.535,906,4.535]],["title/miscellaneous/enumerations.html",[907,1.615,908,3.502]],["body/miscellaneous/enumerations.html",[20,0.519,41,0.024,46,0.812,115,1.948,126,0.018,127,0.021,128,0.018,554,3.408,555,4.309,576,5.095,577,5.095,590,5.095,591,5.095,907,2.853,908,4.296,909,5.095]],["title/miscellaneous/functions.html",[907,1.615,910,3.502]],["body/miscellaneous/functions.html",[20,0.476,40,1.275,41,0.024,42,0.953,44,1.275,49,1.028,53,1.849,126,0.016,127,0.02,128,0.016,159,2.094,291,2.422,299,2.62,300,2.595,302,2.62,303,2.62,305,1.829,358,3.84,359,3.84,360,3.84,364,3.499,587,4.268,783,3.479,792,3.946,795,3.946,907,2.62,910,3.946,911,5.709,912,6.176]],["title/index.html",[20,0.294,913,2.868,914,2.868]],["body/index.html",[0,0.919,4,0.276,10,0.516,41,0.019,42,0.608,105,1.454,126,0.015,127,0.019,128,0.015,142,2.035,208,3.149,710,3.571,761,4.412,915,5.364,916,4.213,917,5.902,918,4.213,919,4.213,920,4.213,921,5.364,922,6.417,923,6.666,924,4.213,925,4.213,926,4.213,927,4.213,928,4.213,929,4.213,930,4.213,931,4.213,932,4.213,933,5.902,934,5.902,935,4.213,936,6.417,937,4.213,938,4.213,939,4.213,940,4.213,941,4.213,942,4.213,943,3.571,944,5.364,945,5.364,946,6.214,947,4.213,948,5.364,949,5.364,950,4.213,951,6.214,952,4.213,953,4.213,954,4.213,955,5.902,956,4.213,957,4.213,958,4.213,959,4.213]],["title/modules.html",[131,1.97]],["body/modules.html",[41,0.021,126,0.017,127,0.021,128,0.017,130,3.038,131,2.083,195,3.038,215,3.334,220,3.038,221,3.038,222,3.038,223,3.038,228,5.102,642,4.203,960,6.826,961,6.826,962,6.9,963,4.957]],["title/overview.html",[964,3.975]],["body/overview.html",[1,1.677,2,1.205,41,0.025,94,0.823,101,1.787,104,1.903,107,1.787,109,1.582,112,1.787,114,1.903,117,1.903,119,1.787,120,1.903,122,1.582,126,0.011,127,0.016,128,0.011,129,1.06,130,3.741,131,1.375,132,1.473,133,1.703,134,1.581,135,1.703,136,1.581,137,2.775,138,2.775,139,2.775,140,2.36,141,1.703,142,1.581,151,1.286,174,2.006,195,3.741,196,2.775,197,2.775,198,2.775,215,4.685,216,2.775,217,2.775,218,2.775,219,2.775,220,3.189,221,3.741,222,3.741,223,4.175,248,2.201,374,2.775,378,2.006,425,2.775,426,2.775,427,2.775,487,2.775,488,2.775,489,2.775,617,2.446,749,2.775,750,2.775,751,2.775,851,2.201,964,2.775,965,3.273,966,3.273,967,3.273]],["title/routes.html",[248,3.153]],["body/routes.html",[41,0.022,126,0.019,127,0.022,128,0.019,248,3.727]],["title/miscellaneous/variables.html",[907,1.615,968,3.502]],["body/miscellaneous/variables.html",[20,0.485,41,0.025,43,0.898,45,1.776,46,0.763,115,1.892,126,0.017,127,0.02,128,0.017,474,3.541,476,4.016,554,3.186,555,4.186,580,4.314,581,3.882,582,4.016,883,4.016,884,5.492,885,4.016,907,2.667,909,4.892,943,4.892,968,4.016,969,4.737,970,4.737,971,5.771]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"classes/Plant.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["0.8.29",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":686,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["008ee4",{"_index":676,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["1",{"_index":378,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubGraphComponent.html":{},"overview.html":{}}}],["1.2.2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["1.5.3",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":617,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"overview.html":{}}}],["100",{"_index":682,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["1000",{"_index":356,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["11",{"_index":965,"title":{},"body":{"overview.html":{}}}],["15000",{"_index":712,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["16",{"_index":697,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["168",{"_index":408,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["2",{"_index":678,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["2.6.5",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":684,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["200",{"_index":741,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["250",{"_index":745,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["3.0.1",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["3.0.13",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["3.13.4",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":680,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["320",{"_index":743,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["4",{"_index":966,"title":{},"body":{"overview.html":{}}}],["4.3.1",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":723,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["50",{"_index":669,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["5000",{"_index":704,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["6",{"_index":967,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":350,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["65535",{"_index":691,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["7",{"_index":374,"title":{},"body":{"components/GraphsHubComponent.html":{},"overview.html":{}}}],["7.0.2",{"_index":919,"title":{},"body":{"index.html":{}}}],["7.0.4",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":724,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["7f8942",{"_index":673,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["82baa9",{"_index":715,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["9",{"_index":793,"title":{},"body":{"classes/Plant.html":{}}}],["abstract",{"_index":304,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["activatedroute",{"_index":444,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["actual_component",{"_index":125,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["addnewplant",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["addnewplant/add",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["addnewplantcomponent",{"_index":1,"title":{"components/AddNewPlantComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addnewplantmodule",{"_index":130,"title":{"modules/AddNewPlantModule.html":{}},"body":{"modules/AddNewPlantModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addzero",{"_index":587,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addzero(date.getutcday",{"_index":796,"title":{},"body":{"classes/Plant.html":{}}}],["addzero(date.getutchours",{"_index":799,"title":{},"body":{"classes/Plant.html":{}}}],["addzero(date.getutcminutes",{"_index":800,"title":{},"body":{"classes/Plant.html":{}}}],["addzero(date.getutcmonth",{"_index":797,"title":{},"body":{"classes/Plant.html":{}}}],["addzero(number",{"_index":792,"title":{},"body":{"classes/Plant.html":{},"miscellaneous/functions.html":{}}}],["afterdelete",{"_index":435,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["alcontrol",{"_index":567,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["alert",{"_index":150,"title":{"classes/Alert.html":{}},"body":{"classes/Alert.html":{},"components/MainHubAlertComponent.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":116,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["alert.component",{"_index":755,"title":{},"body":{"modules/MainHubModule.html":{}}}],["alert.component.ts",{"_index":542,"title":{},"body":{"components/MainHubAlertComponent.html":{},"coverage.html":{}}}],["alert.component.ts:11",{"_index":544,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["alert.component.ts:15",{"_index":546,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["alert.component.ts:9",{"_index":545,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["alert.view.html",{"_index":543,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["alerts",{"_index":102,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["alertscontrolservice",{"_index":173,"title":{"injectables/AlertsControlService.html":{}},"body":{"injectables/AlertsControlService.html":{},"coverage.html":{}}}],["alertshub/alerts",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["alertshubcomponent",{"_index":101,"title":{"components/AlertsHubComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertshubmodule",{"_index":195,"title":{"modules/AlertsHubModule.html":{}},"body":{"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["all_plants').subscribe(value",{"_index":832,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["allow",{"_index":590,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["angular",{"_index":761,"title":{},"body":{"modules/MainHubModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":147,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":182,"title":{},"body":{"injectables/AlertsControlService.html":{},"modules/AppModule.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["angular/compiler",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"injectables/LogsControlService.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":62,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":753,"title":{},"body":{"modules/MainHubModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InformationHubComponent.html":{},"dependencies.html":{}}}],["angular/router/src/url_tree",{"_index":856,"title":{},"body":{"interfaces/Serializable.html":{}}}],["annotations",{"_index":688,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["apiurl",{"_index":177,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["app",{"_index":105,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["app.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":104,"title":{"components/AppComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":215,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":220,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":937,"title":{},"body":{"index.html":{}}}],["artificial",{"_index":261,"title":{},"body":{"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["artificiallight",{"_index":183,"title":{"classes/ArtificialLight.html":{}},"body":{"injectables/AlertsControlService.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"coverage.html":{}}}],["artificiallightbuttoncaption",{"_index":558,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["artificiallightcontrolservice",{"_index":209,"title":{"injectables/ArtificialLightControlService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["artificiallightenum",{"_index":576,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["artificiallightenum.allow",{"_index":599,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["artificiallightenum.forbid",{"_index":600,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["asdassdsdsadasdadsadsad",{"_index":194,"title":{},"body":{"components/AlertsHubComponent.html":{}}}],["automatically",{"_index":928,"title":{},"body":{"index.html":{}}}],["autotable",{"_index":583,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"dependencies.html":{}}}],["available",{"_index":963,"title":{},"body":{"modules.html":{}}}],["bit",{"_index":713,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["body",{"_index":604,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["body.push(row",{"_index":610,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["boolean",{"_index":263,"title":{},"body":{"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"classes/Plant.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/dropdown",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/modal",{"_index":64,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AppModule.html":{},"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["break",{"_index":470,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["bright",{"_index":716,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["browse",{"_index":962,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":23,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["bsmodalservice",{"_index":446,"title":{},"body":{"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["build",{"_index":936,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":556,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons'},{'name",{"_index":118,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["buttons.component",{"_index":759,"title":{},"body":{"modules/MainHubModule.html":{}}}],["buttons.component.ts",{"_index":555,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttons.component.ts:147",{"_index":570,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:28",{"_index":568,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:31",{"_index":578,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:32",{"_index":566,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:43",{"_index":575,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:49",{"_index":574,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:54",{"_index":569,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:58",{"_index":572,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.component.ts:96",{"_index":573,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["buttons.view.html",{"_index":557,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["c",{"_index":387,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["caption",{"_index":367,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["captionpadding",{"_index":692,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["cc4b37",{"_index":725,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["cccccc",{"_index":711,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["change",{"_index":930,"title":{},"body":{"index.html":{}}}],["changes",{"_index":368,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["chart",{"_index":366,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["chartbottommargin",{"_index":683,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["chartcontainer",{"_index":721,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["check",{"_index":958,"title":{},"body":{"index.html":{}}}],["class",{"_index":32,"title":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["classes",{"_index":151,"title":{},"body":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"overview.html":{}}}],["cli",{"_index":917,"title":{},"body":{"index.html":{}}}],["close",{"_index":782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["closebtnname",{"_index":25,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["cloudy",{"_index":714,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["cluster_addnewplantmodule",{"_index":137,"title":{},"body":{"modules/AddNewPlantModule.html":{},"overview.html":{}}}],["cluster_addnewplantmodule_declarations",{"_index":138,"title":{},"body":{"modules/AddNewPlantModule.html":{},"overview.html":{}}}],["cluster_addnewplantmodule_exports",{"_index":139,"title":{},"body":{"modules/AddNewPlantModule.html":{},"overview.html":{}}}],["cluster_alertshubmodule",{"_index":196,"title":{},"body":{"modules/AlertsHubModule.html":{},"overview.html":{}}}],["cluster_alertshubmodule_declarations",{"_index":197,"title":{},"body":{"modules/AlertsHubModule.html":{},"overview.html":{}}}],["cluster_alertshubmodule_exports",{"_index":198,"title":{},"body":{"modules/AlertsHubModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphshubmodule",{"_index":425,"title":{},"body":{"modules/GraphsHubModule.html":{},"overview.html":{}}}],["cluster_graphshubmodule_declarations",{"_index":426,"title":{},"body":{"modules/GraphsHubModule.html":{},"overview.html":{}}}],["cluster_graphshubmodule_exports",{"_index":427,"title":{},"body":{"modules/GraphsHubModule.html":{},"overview.html":{}}}],["cluster_informationhubmodule",{"_index":487,"title":{},"body":{"modules/InformationHubModule.html":{},"overview.html":{}}}],["cluster_informationhubmodule_declarations",{"_index":488,"title":{},"body":{"modules/InformationHubModule.html":{},"overview.html":{}}}],["cluster_informationhubmodule_exports",{"_index":489,"title":{},"body":{"modules/InformationHubModule.html":{},"overview.html":{}}}],["cluster_mainhubmodule",{"_index":749,"title":{},"body":{"modules/MainHubModule.html":{},"overview.html":{}}}],["cluster_mainhubmodule_declarations",{"_index":750,"title":{},"body":{"modules/MainHubModule.html":{},"overview.html":{}}}],["cluster_mainhubmodule_exports",{"_index":751,"title":{},"body":{"modules/MainHubModule.html":{},"overview.html":{}}}],["code",{"_index":710,"title":{},"body":{"components/MainHubGraphComponent.html":{},"index.html":{}}}],["color",{"_index":701,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["colorrange",{"_index":700,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["comment",{"_index":154,"title":{},"body":{"classes/Alert.html":{}}}],["commonmodule",{"_index":146,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}}}],["component",{"_index":0,"title":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["confirm",{"_index":438,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["const",{"_index":78,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["constructor(alcontrol",{"_index":565,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["constructor(formbuilder",{"_index":34,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["constructor(httpclient",{"_index":178,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["constructor(logscontrol",{"_index":652,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["constructor(modalservice",{"_index":771,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(plantcontrol",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/MainHubComponent.html":{}}}],["constructor(private",{"_index":71,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{}}}],["constructor(route",{"_index":443,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["control.service",{"_index":66,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["control.service.ts",{"_index":176,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{},"coverage.html":{}}}],["control.service.ts:11",{"_index":180,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{}}}],["control.service.ts:12",{"_index":281,"title":{},"body":{"injectables/ArtificialLightControlService.html":{},"injectables/PlantControlService.html":{}}}],["control.service.ts:13",{"_index":277,"title":{},"body":{"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["control.service.ts:14",{"_index":829,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["control.service.ts:15",{"_index":510,"title":{},"body":{"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["control.service.ts:16",{"_index":511,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:18",{"_index":500,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:19",{"_index":278,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["control.service.ts:20",{"_index":823,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["control.service.ts:22",{"_index":509,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:24",{"_index":825,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["control.service.ts:26",{"_index":279,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["control.service.ts:28",{"_index":826,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["control.service.ts:30",{"_index":280,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["control.service.ts:38",{"_index":501,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:43",{"_index":828,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["control.service.ts:44",{"_index":507,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:48",{"_index":503,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["control.service.ts:52",{"_index":505,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["core",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["core/models/logs",{"_index":361,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["core/models/plant",{"_index":67,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["core/models/requests",{"_index":363,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/NavbarComponent.html":{}}}],["core/services/artificial",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/logs",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsHubComponent.html":{}}}],["core/services/plant",{"_index":65,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubComponent.html":{},"components/NavbarComponent.html":{}}}],["coverage",{"_index":866,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":481,"title":{},"body":{"components/InformationHubComponent.html":{},"classes/Plant.html":{}}}],["createplant",{"_index":818,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["createplant(newplant",{"_index":822,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["current",{"_index":262,"title":{},"body":{"classes/ArtificialLight.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["current_wired",{"_index":536,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["currentlogs",{"_index":290,"title":{"classes/CurrentLogs.html":{}},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["currentlywired",{"_index":815,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["dark",{"_index":706,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["data",{"_index":382,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["data.push(row",{"_index":396,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["dataformat",{"_index":328,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["date",{"_index":159,"title":{},"body":{"classes/Alert.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubAlertComponent.html":{},"classes/Plant.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["date().tolocalestring",{"_index":548,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["date(logvalue.datetime",{"_index":310,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["date(value.created",{"_index":803,"title":{},"body":{"classes/Plant.html":{}}}],["date(value.datetime",{"_index":167,"title":{},"body":{"classes/Alert.html":{}}}],["date.getutcfullyear",{"_index":798,"title":{},"body":{"classes/Plant.html":{}}}],["datetime",{"_index":155,"title":{},"body":{"classes/Alert.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["days",{"_index":375,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["decimals",{"_index":670,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}],["declare",{"_index":579,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["decline",{"_index":439,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["delete",{"_index":482,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["delete_plant",{"_index":831,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["deleteplant",{"_index":819,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["deleteplant(plant",{"_index":824,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deserialize",{"_index":157,"title":{},"body":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["deserialize(logvalue",{"_index":307,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["deserialize(value",{"_index":162,"title":{},"body":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{}}}],["dev",{"_index":925,"title":{},"body":{"index.html":{}}}],["development",{"_index":920,"title":{},"body":{"index.html":{}}}],["dial",{"_index":727,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["dials",{"_index":726,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["directive",{"_index":97,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["directives",{"_index":124,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":935,"title":{},"body":{"index.html":{}}}],["directory",{"_index":940,"title":{},"body":{"index.html":{}}}],["dist",{"_index":939,"title":{},"body":{"index.html":{}}}],["doc",{"_index":613,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.addpage",{"_index":622,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.autotable",{"_index":618,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.save(this.plantcontrol.currentlywired.family",{"_index":627,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.text('sunlight",{"_index":616,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.text('temperature",{"_index":623,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["doc.text('watering",{"_index":625,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["documentation",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["dry",{"_index":314,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["dynamic",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":952,"title":{},"body":{"index.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["end",{"_index":951,"title":{},"body":{"index.html":{}}}],["enough",{"_index":550,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["enter",{"_index":90,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["entrycomponents",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":589,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["enumerations",{"_index":908,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error(\"method",{"_index":539,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["eventemitter",{"_index":59,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["execute",{"_index":948,"title":{},"body":{"index.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}],["extends",{"_index":306,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["false",{"_index":476,"title":{},"body":{"components/InformationHubComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":89,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/InformationHubComponent.html":{},"classes/Plant.html":{}}}],["fetchnewlogs",{"_index":495,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchsunlightlogs",{"_index":496,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchsunlightlogs(request",{"_index":502,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchtemperaturelogs",{"_index":497,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchtemperaturelogs(request",{"_index":504,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchwateringlogs",{"_index":498,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["fetchwateringlogs(request",{"_index":506,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["ffd756",{"_index":718,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["files",{"_index":931,"title":{},"body":{"index.html":{}}}],["flag",{"_index":942,"title":{},"body":{"index.html":{}}}],["forbid",{"_index":591,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["formbuilder",{"_index":35,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["formgroup",{"_index":54,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["full",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":298,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/Plant.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["functions",{"_index":910,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":954,"title":{},"body":{"index.html":{}}}],["fusion",{"_index":381,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["fusioncharts",{"_index":762,"title":{},"body":{"modules/MainHubModule.html":{},"dependencies.html":{}}}],["fusioncharts/fusioncharts.widgets",{"_index":764,"title":{},"body":{"modules/MainHubModule.html":{}}}],["fusioncharts/themes/fusioncharts.theme.fusion",{"_index":766,"title":{},"body":{"modules/MainHubModule.html":{}}}],["fusionchartsmodule",{"_index":760,"title":{},"body":{"modules/MainHubModule.html":{}}}],["fusionchartsmodule.fcroot(fusioncharts",{"_index":767,"title":{},"body":{"modules/MainHubModule.html":{}}}],["fusiontheme",{"_index":765,"title":{},"body":{"modules/MainHubModule.html":{}}}],["gaugeborderalpha",{"_index":679,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["gaugebordercolor",{"_index":675,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["gaugeborderthickness",{"_index":677,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["generate",{"_index":933,"title":{},"body":{"index.html":{}}}],["generated",{"_index":916,"title":{},"body":{"index.html":{}}}],["getallplants",{"_index":820,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["getcurrentsensordata",{"_index":560,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["getdate",{"_index":440,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["getlastlogs",{"_index":499,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["getlastlogs(plant",{"_index":508,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["getlightstatus",{"_index":274,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["getting",{"_index":913,"title":{"index.html":{}},"body":{}}],["go",{"_index":957,"title":{},"body":{"index.html":{}}}],["graph",{"_index":642,"title":{},"body":{"components/MainHubGraphComponent.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":121,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["graph.component",{"_index":757,"title":{},"body":{"modules/MainHubModule.html":{}}}],["graph.component.ts",{"_index":641,"title":{},"body":{"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["graph.component.ts:12",{"_index":655,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:133",{"_index":657,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:14",{"_index":664,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:148",{"_index":656,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:15",{"_index":658,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:16",{"_index":661,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:17",{"_index":660,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:18",{"_index":659,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:19",{"_index":662,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:20",{"_index":663,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:21",{"_index":665,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.component.ts:22",{"_index":653,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graph.view.html",{"_index":643,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["graphs",{"_index":108,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["graphshub/graph",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["graphshub/graphs",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphshubcomponent",{"_index":107,"title":{"components/GraphsHubComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphshubmodule",{"_index":221,"title":{"modules/GraphsHubModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules.html":{},"overview.html":{}}}],["head",{"_index":619,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["header",{"_index":156,"title":{},"body":{"classes/Alert.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":111,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["header.view.html",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":109,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["heavily",{"_index":549,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["height",{"_index":329,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["help",{"_index":955,"title":{},"body":{"index.html":{}}}],["home",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hostbinding",{"_index":58,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["hostbinding('class",{"_index":69,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["hostbindings",{"_index":31,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["http://192.168.0.24:5000",{"_index":181,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["http://localhost:4200",{"_index":927,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":179,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["httpclientmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule",{"_index":752,"title":{},"body":{"modules/MainHubModule.html":{}}}],["hub",{"_index":115,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hub'},{'name",{"_index":103,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["hub.component",{"_index":200,"title":{},"body":{"modules/AlertsHubModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}}}],["hub.component.ts",{"_index":190,"title":{},"body":{"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubComponent.html":{},"coverage.html":{}}}],["hub.component.ts:10",{"_index":637,"title":{},"body":{"components/MainHubComponent.html":{}}}],["hub.component.ts:13",{"_index":193,"title":{},"body":{"components/AlertsHubComponent.html":{},"components/InformationHubComponent.html":{}}}],["hub.component.ts:14",{"_index":338,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubComponent.html":{}}}],["hub.component.ts:15",{"_index":456,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:16",{"_index":357,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{}}}],["hub.component.ts:17",{"_index":351,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{}}}],["hub.component.ts:18",{"_index":354,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:19",{"_index":349,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{}}}],["hub.component.ts:20",{"_index":355,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:21",{"_index":352,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:22",{"_index":337,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:30",{"_index":450,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:34",{"_index":455,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:38",{"_index":448,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:55",{"_index":449,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:59",{"_index":452,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:63",{"_index":451,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["hub.component.ts:64",{"_index":341,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:9",{"_index":192,"title":{},"body":{"components/AlertsHubComponent.html":{}}}],["hub.component.ts:93",{"_index":346,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.component.ts:97",{"_index":339,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["hub.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["hub.module.ts",{"_index":199,"title":{},"body":{"modules/AlertsHubModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}}}],["hub.view.html",{"_index":191,"title":{},"body":{"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubComponent.html":{}}}],["identifier",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":540,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"components/AlertsHubComponent.html":{},"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["import",{"_index":57,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["information",{"_index":113,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["informationhub/information",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["informationhubcomponent",{"_index":112,"title":{"components/InformationHubComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationhubmodule",{"_index":222,"title":{"modules/InformationHubModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InformationHubModule.html":{},"modules.html":{},"overview.html":{}}}],["informations",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InformationHubComponent.html":{}}}],["inherited",{"_index":858,"title":{},"body":{"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["initialstate",{"_index":777,"title":{},"body":{"components/NavbarComponent.html":{}}}],["injectable",{"_index":172,"title":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{},"coverage.html":{}}}],["injectables",{"_index":174,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{},"overview.html":{}}}],["instanceof",{"_index":301,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["intensivity",{"_index":384,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["intensivity:{br}$value",{"_index":699,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["interface",{"_index":851,"title":{"interfaces/Serializable.html":{}},"body":{"interfaces/Serializable.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":852,"title":{},"body":{"interfaces/Serializable.html":{}}}],["is_sunlight",{"_index":358,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["is_sunlight(log",{"_index":299,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["is_sunlight(logs[0",{"_index":388,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["is_temperature",{"_index":359,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["is_temperature(log",{"_index":302,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["is_temperature(logs[0",{"_index":397,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["is_watering",{"_index":360,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["is_watering(log",{"_index":303,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["is_watering(logs[0",{"_index":400,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["it\\'s",{"_index":705,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["js",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":348,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["json.parse",{"_index":391,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["jspdf",{"_index":581,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["karma",{"_index":950,"title":{},"body":{"index.html":{}}}],["label",{"_index":393,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["landscape",{"_index":615,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["last",{"_index":373,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["level",{"_index":690,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["lg",{"_index":465,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["light",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["light_status",{"_index":272,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["light_status').subscribe",{"_index":284,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["lightstatusready",{"_index":273,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["limit",{"_index":530,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["line",{"_index":353,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["list",{"_index":778,"title":{},"body":{"components/NavbarComponent.html":{}}}],["log",{"_index":300,"title":{"classes/Log.html":{}},"body":{"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["log:16",{"_index":859,"title":{},"body":{"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["log:17",{"_index":860,"title":{},"body":{"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logcontrol",{"_index":336,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["logs",{"_index":342,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["logs.foreach(log",{"_index":389,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["logs.pdf",{"_index":630,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["logscontrol",{"_index":654,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["logscontrolservice",{"_index":212,"title":{"injectables/LogsControlService.html":{}},"body":{"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["logsready",{"_index":493,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["logsrequest",{"_index":362,"title":{"classes/LogsRequest.html":{}},"body":{"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubButtonsComponent.html":{},"classes/RewireRequest.html":{},"coverage.html":{}}}],["logvalue",{"_index":308,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logvalue.artificial",{"_index":313,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logvalue.datetime",{"_index":309,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logvalue.dry",{"_index":317,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logvalue.overwatered",{"_index":319,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["logvalue.value",{"_index":312,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["lost",{"_index":485,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["lowerlimit",{"_index":667,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["lx",{"_index":385,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["main",{"_index":110,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{}}}],["mainhub/main",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mainhubalertcomponent",{"_index":114,"title":{"components/MainHubAlertComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainhubalertcomponent/main",{"_index":754,"title":{},"body":{"modules/MainHubModule.html":{}}}],["mainhubbuttonscomponent",{"_index":117,"title":{"components/MainHubButtonsComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainhubbuttonscontroler/main",{"_index":758,"title":{},"body":{"modules/MainHubModule.html":{}}}],["mainhubcomponent",{"_index":119,"title":{"components/MainHubComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainhubgraphcomponent",{"_index":120,"title":{"components/MainHubGraphComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainhubgraphcomponent/main",{"_index":756,"title":{},"body":{"modules/MainHubModule.html":{}}}],["mainhubmodule",{"_index":223,"title":{"modules/MainHubModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainHubModule.html":{},"modules.html":{},"overview.html":{}}}],["matching",{"_index":127,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maxvalue",{"_index":703,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"components/AlertsHubComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["minvalue",{"_index":702,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["miscellaneous",{"_index":907,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":464,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["modalmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":436,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["modalservice",{"_index":445,"title":{},"body":{"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["models/artificiallight",{"_index":184,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{}}}],["models/logs",{"_index":514,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["models/plant",{"_index":512,"title":{},"body":{"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["models/requests",{"_index":513,"title":{},"body":{"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["module",{"_index":129,"title":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"modules.html":{},"overview.html":{}}}],["moisture",{"_index":370,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["monitor",{"_index":666,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["more",{"_index":956,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navbar",{"_index":123,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar.view.html",{"_index":769,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":122,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":926,"title":{},"body":{"index.html":{}}}],["new",{"_index":10,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"index.html":{}}}],["new_logs').subscribe(observer",{"_index":527,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["new_plant",{"_index":830,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["new_wired",{"_index":537,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["newlogsready",{"_index":494,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["newplant",{"_index":79,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/InformationHubComponent.html":{},"injectables/PlantControlService.html":{}}}],["newplant.family",{"_index":80,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["newplant.name",{"_index":84,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["newplant.species",{"_index":82,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["newplantform",{"_index":26,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["ng",{"_index":923,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":144,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{}}}],["ngondestroy",{"_index":441,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["ngx",{"_index":63,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AppModule.html":{},"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["night",{"_index":708,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["null",{"_index":164,"title":{},"body":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/Plant.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"classes/LogsRequest.html":{},"components/MainHubGraphComponent.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["number.tostring",{"_index":794,"title":{},"body":{"classes/Plant.html":{}}}],["numbersuffix",{"_index":376,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["object",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":185,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["observer",{"_index":87,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/NavbarComponent.html":{}}}],["ondestroy",{"_index":434,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["openaddnewplantmodal",{"_index":770,"title":{},"body":{"components/NavbarComponent.html":{}}}],["openmodal",{"_index":442,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["openmodal(template",{"_index":453,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["optional",{"_index":44,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["orientation",{"_index":614,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["out",{"_index":142,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":964,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwatered",{"_index":315,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["package",{"_index":888,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":40,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pdf",{"_index":635,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["personal",{"_index":92,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["placevaluesinside",{"_index":695,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["plant",{"_index":17,"title":{"classes/Plant.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubAlertComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"coverage.html":{}}}],["plant'},{'name",{"_index":100,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["plant.component",{"_index":148,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["plant.component.ts",{"_index":11,"title":{},"body":{"components/AddNewPlantComponent.html":{},"coverage.html":{}}}],["plant.component.ts:13",{"_index":47,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:15",{"_index":55,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:16",{"_index":56,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:17",{"_index":39,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:20",{"_index":52,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:23",{"_index":48,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.component.ts:37",{"_index":51,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.family",{"_index":478,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["plant.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["plant.module.ts",{"_index":143,"title":{},"body":{"modules/AddNewPlantModule.html":{}}}],["plant.name",{"_index":480,"title":{},"body":{"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["plant.plant_id",{"_index":515,"title":{},"body":{"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["plant.species",{"_index":479,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["plant.view.html",{"_index":19,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plant.wired",{"_index":469,"title":{},"body":{"components/InformationHubComponent.html":{},"injectables/PlantControlService.html":{}}}],["plant_id",{"_index":531,"title":{},"body":{"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{}}}],["plantcontrol",{"_index":36,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["plantcontrol.currentlywired.family",{"_index":638,"title":{},"body":{"components/MainHubComponent.html":{}}}],["plantcontrol.currentlywired.species",{"_index":639,"title":{},"body":{"components/MainHubComponent.html":{}}}],["plantcontrolservice",{"_index":37,"title":{"injectables/PlantControlService.html":{}},"body":{"components/AddNewPlantComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{},"coverage.html":{}}}],["plantfamily",{"_index":74,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plantname",{"_index":77,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plants",{"_index":816,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["plantspecies",{"_index":76,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["plantsready",{"_index":817,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["plottooltext",{"_index":698,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["preparedata",{"_index":334,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["preparedata(logs",{"_index":340,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["preparedate",{"_index":364,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["preparedate((log",{"_index":394,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["preparedate(date",{"_index":795,"title":{},"body":{"classes/Plant.html":{},"miscellaneous/functions.html":{}}}],["preparedate(this.plant.created",{"_index":461,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["preparepdfbody",{"_index":561,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["preparepdfbody(logs",{"_index":571,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["print",{"_index":634,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["printpdf",{"_index":562,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["private",{"_index":24,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{}}}],["prod",{"_index":941,"title":{},"body":{"index.html":{}}}],["production",{"_index":943,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":915,"title":{},"body":{"index.html":{}}}],["properties",{"_index":21,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["protractor",{"_index":953,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":187,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AddNewPlantComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{}}}],["reactiveformsmodule",{"_index":145,"title":{},"body":{"modules/AddNewPlantModule.html":{}}}],["readme",{"_index":959,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":553,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["redirectto",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":929,"title":{},"body":{"index.html":{}}}],["renderat",{"_index":720,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["request",{"_index":406,"title":{},"body":{"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"injectables/PlantControlService.html":{}}}],["request).subscribe(log1",{"_index":518,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["request).subscribe(log2",{"_index":521,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["request).subscribe(log3",{"_index":524,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["request).subscribe(value",{"_index":847,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["request.current_wired",{"_index":843,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["request.limit",{"_index":407,"title":{},"body":{"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{}}}],["request.new_wired",{"_index":845,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["request.plant_id",{"_index":409,"title":{},"body":{"components/GraphsHubComponent.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{}}}],["require",{"_index":580,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('jspdf",{"_index":582,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":141,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}],["result",{"_index":126,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":287,"title":{},"body":{"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["returns",{"_index":49,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"components/AlertsHubComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/functions.html":{}}}],["rewire",{"_index":846,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["rewireplants",{"_index":821,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["rewireplants(plant",{"_index":827,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["rewirerequest",{"_index":535,"title":{"classes/RewireRequest.html":{}},"body":{"classes/LogsRequest.html":{},"components/NavbarComponent.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"coverage.html":{}}}],["root",{"_index":188,"title":{},"body":{"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["root'},{'name",{"_index":106,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["rotatelabels",{"_index":377,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["route",{"_index":447,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["routermodule",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":248,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routesub",{"_index":437,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["routing.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":390,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["row.push('no",{"_index":608,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["row.push('yes",{"_index":607,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["row.push((log",{"_index":605,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["row.push(preparedate((log",{"_index":609,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["run",{"_index":922,"title":{},"body":{"index.html":{}}}],["running",{"_index":944,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"injectables/AlertsControlService.html":{},"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":932,"title":{},"body":{"index.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["sensor",{"_index":633,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["serializable",{"_index":153,"title":{"interfaces/Serializable.html":{}},"body":{"classes/Alert.html":{},"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/LogsRequest.html":{},"classes/Plant.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["serializepath",{"_index":855,"title":{},"body":{"interfaces/Serializable.html":{}}}],["serve",{"_index":924,"title":{},"body":{"index.html":{}}}],["server",{"_index":921,"title":{},"body":{"index.html":{}}}],["setadaptiveymin",{"_index":379,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["showbelow",{"_index":689,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["showgaugeborder",{"_index":674,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["showhovereffect",{"_index":671,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["showshadow",{"_index":693,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["showtooltip",{"_index":722,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["showvalue",{"_index":687,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["soil",{"_index":369,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["soilmoisturedatasource",{"_index":644,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["soilmoistureheight",{"_index":645,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["soilmoisturewidth",{"_index":646,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"modules/GraphsHubModule.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"modules/MainHubModule.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"index.html":{}}}],["species",{"_index":91,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/InformationHubComponent.html":{},"classes/Plant.html":{}}}],["src/.../environment.prod.ts",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logs.ts",{"_index":912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../plant.ts",{"_index":911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/addnewplant/add",{"_index":9,"title":{},"body":{"components/AddNewPlantComponent.html":{},"modules/AddNewPlantModule.html":{},"coverage.html":{}}}],["src/app/alertshub/alerts",{"_index":189,"title":{},"body":{"components/AlertsHubComponent.html":{},"modules/AlertsHubModule.html":{},"coverage.html":{}}}],["src/app/app",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/models/alert.ts",{"_index":152,"title":{},"body":{"classes/Alert.html":{},"coverage.html":{}}}],["src/app/core/models/alert.ts:4",{"_index":161,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/core/models/alert.ts:5",{"_index":158,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/core/models/alert.ts:6",{"_index":160,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/core/models/alert.ts:8",{"_index":163,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/core/models/artificiallight.ts",{"_index":260,"title":{},"body":{"classes/ArtificialLight.html":{},"coverage.html":{}}}],["src/app/core/models/artificiallight.ts:4",{"_index":265,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["src/app/core/models/artificiallight.ts:5",{"_index":264,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["src/app/core/models/artificiallight.ts:7",{"_index":266,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["src/app/core/models/logs",{"_index":584,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["src/app/core/models/logs.ts",{"_index":291,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/models/logs.ts:16",{"_index":490,"title":{},"body":{"classes/Log.html":{}}}],["src/app/core/models/logs.ts:17",{"_index":491,"title":{},"body":{"classes/Log.html":{}}}],["src/app/core/models/logs.ts:21",{"_index":857,"title":{},"body":{"classes/SunlightLog.html":{}}}],["src/app/core/models/logs.ts:23",{"_index":861,"title":{},"body":{"classes/SunlightLog.html":{}}}],["src/app/core/models/logs.ts:34",{"_index":862,"title":{},"body":{"classes/TemperatureLog.html":{}}}],["src/app/core/models/logs.ts:43",{"_index":863,"title":{},"body":{"classes/WateringLog.html":{}}}],["src/app/core/models/logs.ts:44",{"_index":864,"title":{},"body":{"classes/WateringLog.html":{}}}],["src/app/core/models/logs.ts:46",{"_index":865,"title":{},"body":{"classes/WateringLog.html":{}}}],["src/app/core/models/logs.ts:57",{"_index":297,"title":{},"body":{"classes/CurrentLogs.html":{}}}],["src/app/core/models/logs.ts:58",{"_index":296,"title":{},"body":{"classes/CurrentLogs.html":{}}}],["src/app/core/models/logs.ts:59",{"_index":295,"title":{},"body":{"classes/CurrentLogs.html":{}}}],["src/app/core/models/plant",{"_index":588,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["src/app/core/models/plant.ts",{"_index":783,"title":{},"body":{"classes/Plant.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/models/plant.ts:13",{"_index":788,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:14",{"_index":790,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:15",{"_index":789,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:16",{"_index":786,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:17",{"_index":787,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:18",{"_index":785,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/plant.ts:20",{"_index":791,"title":{},"body":{"classes/Plant.html":{}}}],["src/app/core/models/requests",{"_index":586,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["src/app/core/models/requests.ts",{"_index":529,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{},"coverage.html":{}}}],["src/app/core/models/requests.ts:15",{"_index":533,"title":{},"body":{"classes/LogsRequest.html":{}}}],["src/app/core/models/requests.ts:16",{"_index":532,"title":{},"body":{"classes/LogsRequest.html":{}}}],["src/app/core/models/requests.ts:18",{"_index":534,"title":{},"body":{"classes/LogsRequest.html":{}}}],["src/app/core/models/requests.ts:5",{"_index":848,"title":{},"body":{"classes/RewireRequest.html":{}}}],["src/app/core/models/requests.ts:6",{"_index":849,"title":{},"body":{"classes/RewireRequest.html":{}}}],["src/app/core/models/requests.ts:8",{"_index":850,"title":{},"body":{"classes/RewireRequest.html":{}}}],["src/app/core/models/serializable.ts",{"_index":853,"title":{},"body":{"interfaces/Serializable.html":{},"coverage.html":{}}}],["src/app/core/models/serializable.ts:5",{"_index":854,"title":{},"body":{"interfaces/Serializable.html":{}}}],["src/app/core/services/alerts",{"_index":175,"title":{},"body":{"injectables/AlertsControlService.html":{},"coverage.html":{}}}],["src/app/core/services/artificial",{"_index":271,"title":{},"body":{"injectables/ArtificialLightControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["src/app/core/services/logs",{"_index":492,"title":{},"body":{"injectables/LogsControlService.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["src/app/core/services/plant",{"_index":585,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{},"injectables/PlantControlService.html":{},"coverage.html":{}}}],["src/app/graphshub/graph",{"_index":428,"title":{},"body":{"modules/GraphsHubModule.html":{}}}],["src/app/graphshub/graphs",{"_index":327,"title":{},"body":{"components/GraphsHubComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:13",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:9",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/informationhub/information",{"_index":433,"title":{},"body":{"components/InformationHubComponent.html":{},"modules/InformationHubModule.html":{},"coverage.html":{}}}],["src/app/mainhub/main",{"_index":636,"title":{},"body":{"components/MainHubComponent.html":{},"modules/MainHubModule.html":{},"coverage.html":{}}}],["src/app/mainhub/mainhubalertcomponent/main",{"_index":541,"title":{},"body":{"components/MainHubAlertComponent.html":{},"coverage.html":{}}}],["src/app/mainhub/mainhubbuttonscontroler/main",{"_index":554,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/mainhub/mainhubgraphcomponent/main",{"_index":640,"title":{},"body":{"components/MainHubGraphComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":768,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:14",{"_index":773,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:16",{"_index":772,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":774,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:28",{"_index":775,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":914,"title":{"index.html":{}},"body":{}}],["statements",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":620,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["stored",{"_index":938,"title":{},"body":{"index.html":{}}}],["string",{"_index":53,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"injectables/ArtificialLightControlService.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"miscellaneous/functions.html":{}}}],["styleclass",{"_index":70,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["styles",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["subcaption",{"_index":372,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["submit",{"_index":93,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["submitnewplant",{"_index":30,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["sun",{"_index":344,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["sunlight",{"_index":551,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["sunlight_log",{"_index":520,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["sunlightdatasource",{"_index":330,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["sunlightheight",{"_index":647,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["sunlightlog",{"_index":292,"title":{"classes/SunlightLog.html":{}},"body":{"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["sunlightlog).artificial",{"_index":606,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["sunlightlog).datetime",{"_index":395,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["sunlightlog).value",{"_index":392,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["sunlightlogs",{"_index":404,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["sunlightlogs.push(temp",{"_index":415,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["sunlightwidth",{"_index":648,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["sunny",{"_index":717,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["sunvalues.foreach(log",{"_index":412,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["support",{"_index":960,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":483,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["svg",{"_index":961,"title":{},"body":{"modules.html":{}}}],["switch_artificial_light",{"_index":288,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["switch_current_light",{"_index":289,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["switchartificiallight",{"_index":275,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["switchcurrentlight",{"_index":276,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["table",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":413,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"injectables/PlantControlService.html":{}}}],["temp.deserialize(log",{"_index":414,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["temp.deserialize(plant",{"_index":837,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["temperature",{"_index":345,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["temperature_log",{"_index":523,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["temperaturedatasource",{"_index":331,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["temperatureheight",{"_index":649,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["temperaturelog",{"_index":293,"title":{"classes/TemperatureLog.html":{}},"body":{"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["temperaturelog).datetime",{"_index":399,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["temperaturelog).value",{"_index":398,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["temperaturelogs",{"_index":405,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["temperaturelogs.push(temp",{"_index":418,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["temperaturewidth",{"_index":650,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["templateref",{"_index":454,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["tempvalues.foreach(log",{"_index":417,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["test",{"_index":947,"title":{},"body":{"index.html":{}}}],["tests",{"_index":946,"title":{},"body":{"index.html":{}}}],["theme",{"_index":380,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["this.afterdelete",{"_index":473,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.alcontrol.getlightstatus",{"_index":631,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["this.alcontrol.light_status.artificial",{"_index":598,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.alcontrol.light_status.current",{"_index":594,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.alcontrol.lightstatusready.subscribe(value",{"_index":592,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.alcontrol.switchartificiallight().subscribe",{"_index":602,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.alcontrol.switchcurrentlight().subscribe",{"_index":601,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.artificial",{"_index":269,"title":{},"body":{"classes/ArtificialLight.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.artificiallightbuttoncaption",{"_index":597,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.bsmodalref",{"_index":779,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.bsmodalref.content.closebtnname",{"_index":781,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.bsmodalref.hide",{"_index":88,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.comment",{"_index":168,"title":{},"body":{"classes/Alert.html":{}}}],["this.created",{"_index":801,"title":{},"body":{"classes/Plant.html":{}}}],["this.current",{"_index":267,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["this.currentlogs.sunlightlog.deserialize(log2[0",{"_index":522,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["this.currentlogs.temperaturelog.deserialize(log3[0",{"_index":525,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["this.currentlogs.wateringlog.deserialize(log1[0",{"_index":519,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["this.currentlywired",{"_index":839,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.currentlywired.plant_id",{"_index":844,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.date",{"_index":547,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["this.datetime",{"_index":165,"title":{},"body":{"classes/Alert.html":{},"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.dry",{"_index":316,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.family",{"_index":806,"title":{},"body":{"classes/Plant.html":{}}}],["this.formbuilder.group",{"_index":73,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.header",{"_index":170,"title":{},"body":{"classes/Alert.html":{}}}],["this.httpclient.get(this.apiurl",{"_index":283,"title":{},"body":{"injectables/ArtificialLightControlService.html":{},"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["this.httpclient.post(this.apiurl",{"_index":516,"title":{},"body":{"injectables/LogsControlService.html":{},"injectables/PlantControlService.html":{}}}],["this.light_status",{"_index":282,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["this.light_status.deserialize(value",{"_index":285,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["this.lightstatusready.next(true",{"_index":286,"title":{},"body":{"injectables/ArtificialLightControlService.html":{}}}],["this.logcontrol.fetchnewlogs",{"_index":603,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.logcontrol.fetchsunlightlogs(request).subscribe(sunvalues",{"_index":411,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["this.logcontrol.fetchtemperaturelogs(request).subscribe(tempvalues",{"_index":416,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["this.logcontrol.fetchwateringlogs(request).subscribe(watervalues",{"_index":419,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["this.logscontrol.currentlogs.sunlightlog.value",{"_index":736,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logscontrol.currentlogs.temperaturelog.value",{"_index":738,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logscontrol.currentlogs.wateringlog.value",{"_index":734,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logscontrol.getlastlogs(this.plantcontrol.currentlywired",{"_index":729,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logscontrol.logsready.subscribe",{"_index":730,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logscontrol.newlogsready.subscribe",{"_index":732,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.logsready.next(true",{"_index":526,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["this.modalref",{"_index":462,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.modalref.hide",{"_index":475,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.modalservice.onhide.subscribe",{"_index":776,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.modalservice.show(addnewplantcomponent",{"_index":780,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.modalservice.show(template",{"_index":463,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.name",{"_index":808,"title":{},"body":{"classes/Plant.html":{}}}],["this.newlogsready.next(true",{"_index":528,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["this.newplantform",{"_index":72,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.newplantform.controls[\"plantfamily\"].value",{"_index":81,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.newplantform.controls[\"plantname\"].value",{"_index":85,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.newplantform.controls[\"plantspecies\"].value",{"_index":83,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.overwatered",{"_index":318,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.plant",{"_index":459,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plant.deserialize(params",{"_index":460,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plant.plant_id",{"_index":467,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plant_id",{"_index":811,"title":{},"body":{"classes/Plant.html":{}}}],["this.plantcontrol.createplant(newplant).subscribe",{"_index":86,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["this.plantcontrol.currentlywired.name",{"_index":629,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.plantcontrol.currentlywired.plant_id",{"_index":410,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["this.plantcontrol.currentlywired.species",{"_index":628,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.plantcontrol.deleteplant(this.plant).subscribe",{"_index":472,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plantcontrol.getallplants",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/InformationHubComponent.html":{},"components/NavbarComponent.html":{}}}],["this.plantcontrol.plants",{"_index":468,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plantcontrol.plants.length",{"_index":466,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plantcontrol.plantsready.subscribe",{"_index":728,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.plantcontrol.rewireplants(newplant",{"_index":471,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.plants",{"_index":835,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.plants.filter(plant",{"_index":840,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.plants.length",{"_index":833,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.plants.push(temp",{"_index":838,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.plantsready.next(true",{"_index":842,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["this.preparedata(sunlightlogs",{"_index":423,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["this.preparedata(temperaturelogs",{"_index":424,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["this.preparepdfbody(sunlightlogs",{"_index":621,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.preparepdfbody(temperaturelogs",{"_index":624,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.preparepdfbody(wateringlogs",{"_index":626,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":458,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.routesub",{"_index":457,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.routesub.unsubscribe",{"_index":477,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["this.soilmoisturedatasource",{"_index":719,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.soilmoisturedatasource['dials']['dial'][0]['value",{"_index":733,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.soilmoistureheight",{"_index":740,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.soilmoisturewidth",{"_index":742,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.species",{"_index":804,"title":{},"body":{"classes/Plant.html":{}}}],["this.sunlightdatasource",{"_index":383,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["this.sunlightdatasource.value",{"_index":735,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.sunlightheight",{"_index":744,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.sunlightlog",{"_index":320,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.sunlightlog.value",{"_index":326,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.sunlightwidth",{"_index":746,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.temperaturedatasource",{"_index":386,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubGraphComponent.html":{}}}],["this.temperaturedatasource.chart.thmfillcolor",{"_index":739,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.temperaturedatasource.value",{"_index":737,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.temperatureheight",{"_index":747,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.temperaturelog",{"_index":321,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.temperaturelog.value",{"_index":323,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.temperaturewidth",{"_index":748,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.togglelightbuttoncaption",{"_index":593,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["this.updatechartdata",{"_index":731,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["this.updatecharts(this.preparedata(wateringlogs",{"_index":422,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["this.value",{"_index":311,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.wateringdatasource",{"_index":365,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["this.wateringlog",{"_index":322,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.wateringlog.value",{"_index":325,"title":{},"body":{"classes/CurrentLogs.html":{},"classes/Log.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["this.wired",{"_index":813,"title":{},"body":{"classes/Plant.html":{}}}],["thmfillcolor",{"_index":672,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["thmoriginx",{"_index":681,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["throw",{"_index":538,"title":{},"body":{"classes/LogsRequest.html":{},"classes/RewireRequest.html":{}}}],["time",{"_index":709,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["toggle",{"_index":632,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["toggleforbidartificialbutton",{"_index":563,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["togglelightbutton",{"_index":564,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["togglelightbuttoncaption",{"_index":559,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["toogleenum",{"_index":577,"title":{},"body":{"components/MainHubButtonsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["toogleenum.off",{"_index":596,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["toogleenum.on",{"_index":595,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["true",{"_index":474,"title":{},"body":{"components/InformationHubComponent.html":{},"components/MainHubButtonsComponent.html":{},"miscellaneous/variables.html":{}}}],["true)[0",{"_index":841,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["turning",{"_index":552,"title":{},"body":{"components/MainHubAlertComponent.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jspdf",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":945,"title":{},"body":{"index.html":{}}}],["unless",{"_index":707,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["updatechartdata",{"_index":651,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["updatecharts",{"_index":335,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["updatecharts(water",{"_index":343,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["upperlimit",{"_index":668,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["use",{"_index":934,"title":{},"body":{"index.html":{}}}],["usecolornameasvalue",{"_index":694,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["validators",{"_index":61,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["validators.required",{"_index":75,"title":{},"body":{"components/AddNewPlantComponent.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"injectables/AlertsControlService.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.artificial",{"_index":270,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["value.comment",{"_index":169,"title":{},"body":{"classes/Alert.html":{}}}],["value.created",{"_index":802,"title":{},"body":{"classes/Plant.html":{}}}],["value.current",{"_index":268,"title":{},"body":{"classes/ArtificialLight.html":{}}}],["value.datetime",{"_index":166,"title":{},"body":{"classes/Alert.html":{}}}],["value.family",{"_index":807,"title":{},"body":{"classes/Plant.html":{}}}],["value.header",{"_index":171,"title":{},"body":{"classes/Alert.html":{}}}],["value.id",{"_index":810,"title":{},"body":{"classes/Plant.html":{}}}],["value.name",{"_index":809,"title":{},"body":{"classes/Plant.html":{}}}],["value.plant_id",{"_index":812,"title":{},"body":{"classes/Plant.html":{}}}],["value.species",{"_index":805,"title":{},"body":{"classes/Plant.html":{}}}],["value.wired",{"_index":814,"title":{},"body":{"classes/Plant.html":{}}}],["value['plants'].foreach(plant",{"_index":836,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["value['plants'].length",{"_index":834,"title":{},"body":{"injectables/PlantControlService.html":{}}}],["valuefontcolor",{"_index":685,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["valuefontsize",{"_index":696,"title":{},"body":{"components/MainHubGraphComponent.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AddNewPlantComponent.html":{},"components/AlertsHubComponent.html":{},"components/AppComponent.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{}}}],["variable",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":968,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":918,"title":{},"body":{"index.html":{}}}],["via",{"_index":949,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AddNewPlantComponent.html":{},"classes/Alert.html":{},"components/AlertsHubComponent.html":{},"classes/ArtificialLight.html":{},"injectables/ArtificialLightControlService.html":{},"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"components/HeaderComponent.html":{},"components/InformationHubComponent.html":{},"classes/Log.html":{},"injectables/LogsControlService.html":{},"classes/LogsRequest.html":{},"components/MainHubAlertComponent.html":{},"components/MainHubButtonsComponent.html":{},"components/MainHubComponent.html":{},"components/MainHubGraphComponent.html":{},"components/NavbarComponent.html":{},"classes/Plant.html":{},"injectables/PlantControlService.html":{},"classes/RewireRequest.html":{},"interfaces/Serializable.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{}}}],["want",{"_index":484,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["water",{"_index":347,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["watering_log",{"_index":517,"title":{},"body":{"injectables/LogsControlService.html":{}}}],["wateringdatasource",{"_index":332,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["wateringlog",{"_index":294,"title":{"classes/WateringLog.html":{}},"body":{"classes/CurrentLogs.html":{},"components/GraphsHubComponent.html":{},"classes/Log.html":{},"components/MainHubButtonsComponent.html":{},"classes/SunlightLog.html":{},"classes/TemperatureLog.html":{},"classes/WateringLog.html":{},"coverage.html":{}}}],["wateringlog).datetime",{"_index":402,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["wateringlog).dry",{"_index":611,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["wateringlog).overwatered",{"_index":612,"title":{},"body":{"components/MainHubButtonsComponent.html":{}}}],["wateringlog).value",{"_index":401,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["wateringlogs",{"_index":403,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["wateringlogs.push(temp",{"_index":421,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["watervalues.foreach(log",{"_index":420,"title":{},"body":{"components/GraphsHubComponent.html":{},"components/MainHubButtonsComponent.html":{}}}],["widgets",{"_index":763,"title":{},"body":{"modules/MainHubModule.html":{}}}],["width",{"_index":333,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["wired",{"_index":784,"title":{},"body":{"classes/Plant.html":{}}}],["wiredplant",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["yaxisname",{"_index":371,"title":{},"body":{"components/GraphsHubComponent.html":{}}}],["yes",{"_index":486,"title":{},"body":{"components/InformationHubComponent.html":{}}}],["zone.js",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":140,"title":{},"body":{"modules/AddNewPlantModule.html":{},"modules/AlertsHubModule.html":{},"modules/AppModule.html":{},"modules/GraphsHubModule.html":{},"modules/InformationHubModule.html":{},"modules/MainHubModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddNewPlantComponent.html":{"url":"components/AddNewPlantComponent.html","title":"component - AddNewPlantComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddNewPlantComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/AddNewPlant/add-new-plant.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add-new-plant\n            \n\n\n\n\n            \n                templateUrl\n                ./add-new-plant.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                    Private\n                                closeBtnName\n                            \n                            \n                                    Private\n                                newPlantForm\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                submitNewPlant\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, bsModalRef: BsModalRef, plantControl: PlantControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/AddNewPlant/add-new-plant.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'add-new-plant'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitNewPlant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitNewPlant()\n                \n            \n\n\n            \n                \n                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeBtnName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newPlantForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AddNewPlant/add-new-plant.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { PlantControlService } from '../Core/Services/plant-control.service';\nimport { Plant } from '../Core/Models/Plant';\n\n@Component({\n  selector: 'add-new-plant',\n  templateUrl: './add-new-plant.view.html'\n})\nexport class AddNewPlantComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'add-new-plant';\n\n  private newPlantForm: FormGroup;\n  private title: string;\n  private closeBtnName: string;\n\n  constructor(private formBuilder: FormBuilder,\n              public bsModalRef: BsModalRef,\n              private plantControl: PlantControlService) { }\n\n  ngOnInit() {\n    this.newPlantForm = this.formBuilder.group({\n      plantFamily: ['', [\n        Validators.required\n      ]],\n      plantSpecies: ['', [\n        Validators.required\n      ]],\n      plantName: ['', [\n        Validators.required\n      ]],\n    });\n  }\n\n  public submitNewPlant(): void {\n    const newPlant: Plant = new Plant();\n    newPlant.family = this.newPlantForm.controls[\"plantFamily\"].value;\n    newPlant.species = this.newPlantForm.controls[\"plantSpecies\"].value;\n    newPlant.name = this.newPlantForm.controls[\"plantName\"].value;\n    this.plantControl.createPlant(newPlant).subscribe( observer => {\n      this.bsModalRef.hide();\n    });\n    \n  }\n\n}\n\n    \n\n    \n        \n    {{title}}\n\n\n    \n        \n            \n                Family name\n                \n                \n                Enter family name of your plant.\n            \n            \n                Species\n                \n                \n                Enter species of your plant.\n            \n            \n                Name\n                \n                \n                Enter a \"personal\" name of your plant.\n            \n            \n                Submit\n                {{closeBtnName}}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}                                        Family name                                                Enter family name of your plant.                                        Species                                                Enter species of your plant.                                        Name                                                Enter a \"personal\" name of your plant.                                        Submit                {{closeBtnName}}                        '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddNewPlantComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddNewPlantModule.html":{"url":"modules/AddNewPlantModule.html","title":"module - AddNewPlantModule","body":"\n                   \n\n\n\n\n    Modules\n    AddNewPlantModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddNewPlantModule\n\n\n\ncluster_AddNewPlantModule_declarations\n\n\n\ncluster_AddNewPlantModule_exports\n\n\n\n\nAddNewPlantComponent\n\nAddNewPlantComponent\n\n\n\nAddNewPlantModule\n\nAddNewPlantModule\n\nAddNewPlantModule -->\n\nAddNewPlantComponent->AddNewPlantModule\n\n\n\n\n\nAddNewPlantComponent \n\nAddNewPlantComponent \n\nAddNewPlantComponent  -->\n\nAddNewPlantModule->AddNewPlantComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/AddNewPlant/add-new-plant.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddNewPlantComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddNewPlantComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AddNewPlantComponent } from './add-new-plant.component';\n\n@NgModule({\n    declarations: [\n        AddNewPlantComponent\n    ],\n    imports: [\n        CommonModule, ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [AddNewPlantComponent]\n  })\n  export class AddNewPlantModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alert.html":{"url":"classes/Alert.html","title":"class - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Alert.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                datetime\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Alert.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Alert.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Alert.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Alert.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport class Alert implements Serializable{\n    header: string;\n    comment: string;\n    datetime: Date;\n\n    deserialize(value: any): void {\n        if (value != null) {\n            this.datetime = value.datetime != null ? new Date(value.datetime): null;\n            this.comment = value.comment;\n            this.header = value.header;\n        } \n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertsControlService.html":{"url":"injectables/AlertsControlService.html","title":"injectable - AlertsControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertsControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/alerts-control.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/alerts-control.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.0.24:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/alerts-control.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ArtificialLight } from '../Models/ArtificialLight';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertsControlService {\n\n    private apiURL: string = 'http://192.168.0.24:5000';\n\n    constructor(private httpClient: HttpClient) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsHubComponent.html":{"url":"components/AlertsHubComponent.html","title":"component - AlertsHubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertsHubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/AlertsHub/alerts-hub.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                alerts-hub\n            \n\n\n\n\n            \n                templateUrl\n                ./alerts-hub.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/AlertsHub/alerts-hub.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'alerts-hub'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/AlertsHub/alerts-hub.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/AlertsHub/alerts-hub.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { OnInit, HostBinding, Component } from \"@angular/core\";\n\n@Component({\n    selector: 'alerts-hub',\n    templateUrl: './alerts-hub.view.html',\n})\nexport class AlertsHubComponent implements OnInit {\n\n    @HostBinding('class') styleClass = 'alerts-hub';\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n    \n\n    \n        asdassdsdsadasdadsadsad\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'asdassdsdsadasdadsadsad'\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsHubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AlertsHubModule.html":{"url":"modules/AlertsHubModule.html","title":"module - AlertsHubModule","body":"\n                   \n\n\n\n\n    Modules\n    AlertsHubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AlertsHubModule\n\n\n\ncluster_AlertsHubModule_declarations\n\n\n\ncluster_AlertsHubModule_exports\n\n\n\n\nAlertsHubComponent\n\nAlertsHubComponent\n\n\n\nAlertsHubModule\n\nAlertsHubModule\n\nAlertsHubModule -->\n\nAlertsHubComponent->AlertsHubModule\n\n\n\n\n\nAlertsHubComponent \n\nAlertsHubComponent \n\nAlertsHubComponent  -->\n\nAlertsHubModule->AlertsHubComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/AlertsHub/alerts-hub.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertsHubComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertsHubComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AlertsHubComponent } from './alerts-hub.component';\n\n@NgModule({\n    declarations: [\n       AlertsHubComponent,\n    ],\n    imports: [\n        CommonModule,\n    ],\n    providers: [],\n    exports: [AlertsHubComponent]\n  })\n  export class AlertsHubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(plantControl: PlantControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WiredPlant'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PlantControlService } from './Core/Services/plant-control.service';\nimport { ArtificialLightControlService } from './Core/Services/artificial-light-control.service';\nimport { LogsControlService } from './Core/Services/logs-control.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'WiredPlant';\n\n  constructor(private plantControl: PlantControlService) {\n    this.plantControl.getAllPlants();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAddNewPlantModule\n\nAddNewPlantModule\n\nAppModule -->\n\nAddNewPlantModule->AppModule\n\n\n\n\n\nAlertsHubModule\n\nAlertsHubModule\n\nAppModule -->\n\nAlertsHubModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphsHubModule\n\nGraphsHubModule\n\nAppModule -->\n\nGraphsHubModule->AppModule\n\n\n\n\n\nInformationHubModule\n\nInformationHubModule\n\nAppModule -->\n\nInformationHubModule->AppModule\n\n\n\n\n\nMainHubModule\n\nMainHubModule\n\nAppModule -->\n\nMainHubModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddNewPlantComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddNewPlantModule\n                        \n                        \n                            AlertsHubModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphsHubModule\n                        \n                        \n                            InformationHubModule\n                        \n                        \n                            MainHubModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { HeaderComponent } from './Header/header.component';\nimport { NavbarComponent } from './Navbar/navbar.component';\nimport { AddNewPlantModule } from './AddNewPlant/add-new-plant.module';\nimport { MainHubModule } from './MainHub/main-hub.module';\nimport { AddNewPlantComponent } from './AddNewPlant/add-new-plant.component';\nimport { InformationHubModule } from './InformationHub/information-hub.module';\nimport { AlertsHubModule } from './AlertsHub/alerts-hub.module';\nimport { GraphsHubModule } from './GraphsHub/graph-hub.module';\n\n@NgModule({\n  declarations: [\n    AppComponent, HeaderComponent, NavbarComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, AppRoutingModule, BsDropdownModule.forRoot(), AddNewPlantModule, MainHubModule, InformationHubModule, AlertsHubModule, GraphsHubModule, ModalModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [AddNewPlantComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddNewPlantComponent } from './AddNewPlant/add-new-plant.component';\nimport { MainHubComponent } from './MainHub/main-hub.component';\nimport { InformationHubComponent } from './InformationHub/information-hub.component';\nimport { AlertsHubComponent } from './AlertsHub/alerts-hub.component';\nimport { GraphsHubComponent } from './GraphsHub/graphs-hub.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: MainHubComponent,\n  },\n  {\n    path: 'addnewplant',\n    component: AddNewPlantComponent,\n  },\n  {\n    path: 'informations',\n    component: InformationHubComponent,\n  },\n  {\n    path: 'alerts',\n    component: AlertsHubComponent,\n  },\n  {\n    path: 'graphs',\n    component: GraphsHubComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArtificialLight.html":{"url":"classes/ArtificialLight.html","title":"class - ArtificialLight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArtificialLight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/ArtificialLight.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artificial\n                            \n                            \n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artificial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/ArtificialLight.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/ArtificialLight.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/ArtificialLight.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport class ArtificialLight implements Serializable{\n    current: boolean;\n    artificial: boolean;\n\n    deserialize(value: any): void {\n        if (value != null) {\n            this.current = value.current;\n            this.artificial = value.artificial;\n        } \n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArtificialLightControlService.html":{"url":"injectables/ArtificialLightControlService.html","title":"injectable - ArtificialLightControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArtificialLightControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/artificial-light-control.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                            \n                                    Public\n                                light_status\n                            \n                            \n                                    Public\n                                lightStatusReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLightStatus\n                            \n                            \n                                    Public\n                                switchArtificialLight\n                            \n                            \n                                    Public\n                                switchCurrentLight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/artificial-light-control.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLightStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLightStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/artificial-light-control.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchArtificialLight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchArtificialLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/artificial-light-control.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchCurrentLight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchCurrentLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/artificial-light-control.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.0.24:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/artificial-light-control.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            light_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArtificialLight\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/artificial-light-control.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lightStatusReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/artificial-light-control.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ArtificialLight } from '../Models/ArtificialLight';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArtificialLightControlService {\n\n  public lightStatusReady: EventEmitter = new EventEmitter();\n  public light_status: ArtificialLight;\n  private apiURL: string = 'http://192.168.0.24:5000';\n\n  constructor(private httpClient: HttpClient) { \n    this.light_status = new ArtificialLight();\n  }\n\n  public getLightStatus() {\n      this.httpClient.get(this.apiURL + '/light_status').subscribe( value => {\n        this.light_status.deserialize(value);\n        this.lightStatusReady.next(true);\n      });\n  }\n\n  public switchArtificialLight(): Observable {\n    return this.httpClient.get(this.apiURL + '/switch_artificial_light')\n  }\n\n  public switchCurrentLight(): Observable {\n    return this.httpClient.get(this.apiURL + '/switch_current_light')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurrentLogs.html":{"url":"classes/CurrentLogs.html","title":"class - CurrentLogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurrentLogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Logs.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sunlightLog\n                            \n                            \n                                temperatureLog\n                            \n                            \n                                wateringLog\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Models/Logs.ts:59\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sunlightLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SunlightLog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperatureLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemperatureLog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wateringLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WateringLog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function is_Sunlight(log: Log) {\n    return log instanceof SunlightLog;\n}\n\nexport function is_Temperature(log: Log) {\n    return log instanceof TemperatureLog;\n}\n\nexport function is_Watering(log: Log) {\n    return log instanceof WateringLog;\n}\n\nexport abstract class Log {\n    datetime: Date;\n    value: number;\n}\n\nexport class SunlightLog extends Log implements Serializable {\n    artificial: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.artificial = logValue.artificial;\n        } \n    }\n}\n\nexport class TemperatureLog extends Log implements Serializable {\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n        } \n    }\n}\n\nexport class WateringLog extends Log implements Serializable {\n    dry: boolean;\n    overwatered: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.dry = logValue.dry;\n            this.overwatered = logValue.overwatered\n        } \n    }\n}\n\nexport class CurrentLogs {\n    wateringLog: WateringLog;\n    sunlightLog: SunlightLog;\n    temperatureLog: TemperatureLog;\n\n    constructor() {\n        this.sunlightLog = new SunlightLog();\n        this.temperatureLog = new TemperatureLog();\n        this.wateringLog = new WateringLog();\n        this.temperatureLog.value = 0;\n        this.wateringLog.value = 0;\n        this.sunlightLog.value = 0;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsHubComponent.html":{"url":"components/GraphsHubComponent.html","title":"component - GraphsHubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphsHubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/GraphsHub/graphs-hub.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                graphs-hub\n            \n\n\n\n\n            \n                templateUrl\n                ./graphs-hub.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataFormat\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                sunlightDataSource\n                            \n                            \n                                    Public\n                                temperatureDataSource\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                wateringDataSource\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                prepareData\n                            \n                            \n                                    Private\n                                updateCharts\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(plantControl: PlantControlService, logControl: LogsControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/GraphsHub/graphs-hub.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logControl\n                                                  \n                                                        \n                                                                        LogsControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'graphs-hub'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/GraphsHub/graphs-hub.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            prepareData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareData(logs: Log[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/GraphsHub/graphs-hub.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logs\n                                    \n                                                Log[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateCharts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCharts(water: any[], sun: any[], temperature: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/GraphsHub/graphs-hub.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    water\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sun\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    temperature\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'json'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 600\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunlightDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'line'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wateringDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/GraphsHub/graphs-hub.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { OnInit, HostBinding, Component } from \"@angular/core\";\nimport { Log, WateringLog, SunlightLog, TemperatureLog, is_Sunlight, is_Temperature, is_Watering } from \"../Core/Models/Logs\";\nimport { LogsRequest } from \"../Core/Models/Requests\";\nimport { PlantControlService } from \"../Core/Services/plant-control.service\";\nimport { LogsControlService } from \"../Core/Services/logs-control.service\";\nimport { prepareDate } from \"../Core/Models/Plant\";\n\n@Component({\n    selector: 'graphs-hub',\n    templateUrl: './graphs-hub.view.html',\n})\nexport class GraphsHubComponent implements OnInit {\n\n    @HostBinding('class') styleClass = 'graphs-hub';\n\n    public width: number = 1000;\n    public height: number = 600;\n    public type: string = 'line';\n    public dataFormat: string = 'json';\n    public wateringDataSource: any;\n    public temperatureDataSource: any;\n    public sunlightDataSource: any;\n\n    constructor(private plantControl: PlantControlService,\n        private logControl: LogsControlService) {\n        // this.wateringDataSource = {\n        //     \"chart\": {\n        //         \"caption\": \"Changes in soil moisture\",\n        //         \"yaxisname\": \"Soil moisture %\",\n        //         \"subcaption\": \"From last 7 days\",\n        //         \"numbersuffix\": \" %\",\n        //         \"rotatelabels\": \"1\",\n        //         \"setadaptiveymin\": \"1\",\n        //         \"theme\": \"fusion\"\n        //     },\n        //     \"data\": []\n        // };\n        // this.sunlightDataSource = {\n        //     \"chart\": {\n        //         \"caption\": \"Changes in light intensivity\",\n        //         \"yaxisname\": \"Light intensivity lx\",\n        //         \"subcaption\": \"From last 7 days\",\n        //         \"numbersuffix\": \" lx\",\n        //         \"rotatelabels\": \"1\",\n        //         \"setadaptiveymin\": \"1\",\n        //         \"theme\": \"fusion\"\n        //     },\n        //     \"data\": []\n        // };\n        // this.temperatureDataSource = {\n        //     \"chart\": {\n        //         \"caption\": \"Changes in temperature\",\n        //         \"yaxisname\": \"Temperature °C\",\n        //         \"subcaption\": \"From last 7 days\",\n        //         \"numbersuffix\": \" °C\",\n        //         \"rotatelabels\": \"1\",\n        //         \"setadaptiveymin\": \"1\",\n        //         \"theme\": \"fusion\"\n        //     },\n        //     \"data\": []\n        // };\n    }\n\n    private prepareData(logs: Log[]): any[] {\n        const data: any[] = [];\n        if (is_Sunlight(logs[0])) {\n            logs.forEach(log => {\n                let row: any;\n                row = JSON.parse('{ \"value\": ' + (log as SunlightLog).value + ', \"label\": \"' + prepareDate((log as SunlightLog).datetime) + '\"}');\n                data.push(row);\n            })\n            return data;\n        }\n        else if (is_Temperature(logs[0])) {\n            logs.forEach(log => {\n                let row: any;\n                row = JSON.parse('{ \"value\": ' + (log as TemperatureLog).value + ', \"label\": \"' + prepareDate((log as TemperatureLog).datetime) + '\"}');\n                data.push(row);\n            })\n            return data;\n        }\n        else if (is_Watering(logs[0])) {\n            logs.forEach(log => {\n                let row: any;\n                row = JSON.parse('{ \"value\": ' + (log as WateringLog).value + ', \"label\": \"' + prepareDate((log as WateringLog).datetime) + '\"}');\n                data.push(row);\n            })\n            return data;\n        }\n        return null;\n    }\n\n    private updateCharts(water: any[], sun: any[], temperature: any[]) {\n\n    }\n\n    ngOnInit() {\n    //     const wateringLogs: WateringLog[] = [];\n    //     const sunlightLogs: SunlightLog[] = [];\n    //     const temperatureLogs: TemperatureLog[] = [];\n    //     const request: LogsRequest = new LogsRequest();\n    //     request.limit = 168;\n    //     request.plant_id = this.plantControl.currentlyWired.plant_id;\n    //     this.logControl.fetchSunlightLogs(request).subscribe(sunValues => {\n    //         sunValues.forEach(log => {\n    //             const temp: SunlightLog = new SunlightLog();\n    //             temp.deserialize(log);\n    //             sunlightLogs.push(temp);\n    //         });\n    //         this.logControl.fetchTemperatureLogs(request).subscribe(tempValues => {\n    //             tempValues.forEach(log => {\n    //                 const temp: TemperatureLog = new TemperatureLog();\n    //                 temp.deserialize(log);\n    //                 temperatureLogs.push(temp);\n    //             });\n    //             this.logControl.fetchWateringLogs(request).subscribe(waterValues => {\n    //                 waterValues.forEach(log => {\n    //                     const temp: WateringLog = new WateringLog();\n    //                     temp.deserialize(log);\n    //                     wateringLogs.push(temp);\n    //                 });\n    //                 this.updateCharts(this.prepareData(wateringLogs), this.prepareData(sunlightLogs), this.prepareData(temperatureLogs));\n    //             })\n    //         })\n    //     });\n    }\n}\n    \n\n    \n        \n\n\n\n\n\n\n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->'\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsHubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsHubModule.html":{"url":"modules/GraphsHubModule.html","title":"module - GraphsHubModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsHubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphsHubModule\n\n\n\ncluster_GraphsHubModule_declarations\n\n\n\ncluster_GraphsHubModule_exports\n\n\n\n\nGraphsHubComponent\n\nGraphsHubComponent\n\n\n\nGraphsHubModule\n\nGraphsHubModule\n\nGraphsHubModule -->\n\nGraphsHubComponent->GraphsHubModule\n\n\n\n\n\nGraphsHubComponent \n\nGraphsHubComponent \n\nGraphsHubComponent  -->\n\nGraphsHubModule->GraphsHubComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/GraphsHub/graph-hub.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GraphsHubComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GraphsHubComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GraphsHubComponent } from './graphs-hub.component';\n\n\n\n@NgModule({\n    declarations: [\n       GraphsHubComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    providers: [],\n    exports: [GraphsHubComponent]\n  })\n  export class GraphsHubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Header/header.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'main-header'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Header/header.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Header/header.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'main-header',\n  templateUrl: './header.view.html',\n})\nexport class HeaderComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'main-header';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    WiredPlant\n  \n  \n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          WiredPlant      '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationHubComponent.html":{"url":"components/InformationHubComponent.html","title":"component - InformationHubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationHubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/InformationHub/information-hub.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-hub\n            \n\n\n\n\n            \n                templateUrl\n                ./information-hub.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afterDelete\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                            \n                                    Private\n                                plant\n                            \n                            \n                                    Private\n                                routeSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                decline\n                            \n                            \n                                    Public\n                                getDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, plantControl: PlantControlService, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/InformationHub/information-hub.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'information-hub'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/InformationHub/information-hub.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decline\n                        \n                        \n                    \n                \n            \n            \n                \ndecline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/InformationHub/information-hub.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afterDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/InformationHub/information-hub.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/InformationHub/information-hub.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plant\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Plant\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/InformationHub/information-hub.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routeSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/InformationHub/information-hub.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { OnInit, HostBinding, Component, OnDestroy, TemplateRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Plant, prepareDate } from \"../Core/Models/Plant\";\nimport { PlantControlService } from \"../Core/Services/plant-control.service\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\n\n@Component({\n    selector: 'information-hub',\n    templateUrl: './information-hub.view.html',\n})\nexport class InformationHubComponent implements OnInit, OnDestroy {\n\n    @HostBinding('class') styleClass = 'information-hub';\n\n    private modalRef: BsModalRef;\n    private routeSub: any;\n    private plant: Plant;\n\n    public afterDelete: boolean;\n\n    constructor(private route: ActivatedRoute,\n        private plantControl: PlantControlService,\n        private modalService: BsModalService) {\n        this.routeSub = this.route.queryParams.subscribe(params => {\n            this.plant = new Plant();\n            this.plant.deserialize(params);\n        });\n    }\n\n    public getDate(): string {\n        return prepareDate(this.plant.created);\n    }\n\n    openModal(template: TemplateRef) {\n        this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\n    }\n\n    confirm(): void {\n        if (this.plantControl.plants.length > 1 && this.plant.plant_id == this.plantControl.currentlyWired.plant_id) {\n            let newPlant: Plant;\n            for (let plant of this.plantControl.plants){\n                if (!plant.wired) {\n                    newPlant = plant;   \n                    break;             \n                }\n            }\n            this.plantControl.rewirePlants(newPlant);\n        }\n        this.plantControl.deletePlant(this.plant).subscribe();\n        this.plantControl.getAllPlants();\n        this.afterDelete = true;\n        this.modalRef.hide();\n    }\n\n    decline(): void {\n        this.modalRef.hide();\n    }\n\n    ngOnInit() {\n        this.afterDelete = false;\n    }\n\n    ngOnDestroy() {\n        this.afterDelete = false;\n        this.routeSub.unsubscribe();\n    }\n\n}\n    \n\n    \n        \n    \n        \n            Informations\n        \n    \n    \n        Family: {{plant.family}}\n    \n    Species: {{plant.species}}\n    Name: {{plant.name}}\n    Created: {{getDate()}}\n    \n    Delete\n\n\n\n    \n      Are you sure you want to delete this plant?\n      All logs and alerts will be lost\n      No\n      Yes\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Informations                        Family: {{plant.family}}        Species: {{plant.species}}    Name: {{plant.name}}    Created: {{getDate()}}        Delete          Are you sure you want to delete this plant?      All logs and alerts will be lost      No      Yes      '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationHubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InformationHubModule.html":{"url":"modules/InformationHubModule.html","title":"module - InformationHubModule","body":"\n                   \n\n\n\n\n    Modules\n    InformationHubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InformationHubModule\n\n\n\ncluster_InformationHubModule_declarations\n\n\n\ncluster_InformationHubModule_exports\n\n\n\n\nInformationHubComponent\n\nInformationHubComponent\n\n\n\nInformationHubModule\n\nInformationHubModule\n\nInformationHubModule -->\n\nInformationHubComponent->InformationHubModule\n\n\n\n\n\nInformationHubComponent \n\nInformationHubComponent \n\nInformationHubComponent  -->\n\nInformationHubModule->InformationHubComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/InformationHub/information-hub.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InformationHubComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InformationHubComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InformationHubComponent } from './information-hub.component';\n\n@NgModule({\n    declarations: [\n       InformationHubComponent,\n    ],\n    imports: [\n        CommonModule,\n    ],\n    providers: [],\n    exports: [InformationHubComponent]\n  })\n  export class InformationHubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Logs.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datetime\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function is_Sunlight(log: Log) {\n    return log instanceof SunlightLog;\n}\n\nexport function is_Temperature(log: Log) {\n    return log instanceof TemperatureLog;\n}\n\nexport function is_Watering(log: Log) {\n    return log instanceof WateringLog;\n}\n\nexport abstract class Log {\n    datetime: Date;\n    value: number;\n}\n\nexport class SunlightLog extends Log implements Serializable {\n    artificial: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.artificial = logValue.artificial;\n        } \n    }\n}\n\nexport class TemperatureLog extends Log implements Serializable {\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n        } \n    }\n}\n\nexport class WateringLog extends Log implements Serializable {\n    dry: boolean;\n    overwatered: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.dry = logValue.dry;\n            this.overwatered = logValue.overwatered\n        } \n    }\n}\n\nexport class CurrentLogs {\n    wateringLog: WateringLog;\n    sunlightLog: SunlightLog;\n    temperatureLog: TemperatureLog;\n\n    constructor() {\n        this.sunlightLog = new SunlightLog();\n        this.temperatureLog = new TemperatureLog();\n        this.wateringLog = new WateringLog();\n        this.temperatureLog.value = 0;\n        this.wateringLog.value = 0;\n        this.sunlightLog.value = 0;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsControlService.html":{"url":"injectables/LogsControlService.html","title":"injectable - LogsControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogsControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/logs-control.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                            \n                                    Public\n                                currentLogs\n                            \n                            \n                                    Public\n                                logsReady\n                            \n                            \n                                    Public\n                                newLogsReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchNewLogs\n                            \n                            \n                                    Public\n                                fetchSunlightLogs\n                            \n                            \n                                    Public\n                                fetchTemperatureLogs\n                            \n                            \n                                    Public\n                                fetchWateringLogs\n                            \n                            \n                                    Public\n                                getLastLogs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/logs-control.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchNewLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNewLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/logs-control.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchSunlightLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchSunlightLogs(request: LogsRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/logs-control.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                LogsRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchTemperatureLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchTemperatureLogs(request: LogsRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/logs-control.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                LogsRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchWateringLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchWateringLogs(request: LogsRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/logs-control.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                LogsRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLastLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastLogs(plant: Plant)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/logs-control.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plant\n                                    \n                                                Plant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.0.24:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/logs-control.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentLogs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CurrentLogs\n\n                        \n                    \n                    \n                        \n                            Default value : new CurrentLogs()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/logs-control.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logsReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/logs-control.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newLogsReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/logs-control.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Plant } from '../Models/Plant';\nimport { LogsRequest } from '../Models/Requests';\nimport { CurrentLogs } from '../Models/Logs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LogsControlService {\n\n    public currentLogs: CurrentLogs = new CurrentLogs();\n\n    public logsReady: EventEmitter = new EventEmitter();\n    public newLogsReady: EventEmitter = new EventEmitter();\n    \n    private apiURL: string = 'http://192.168.0.24:5000';\n\n    constructor(private httpClient: HttpClient) { }\n\n    public getLastLogs(plant: Plant) {\n        const request: LogsRequest = new LogsRequest;\n        request.limit = 1;\n        request.plant_id = plant.plant_id;\n        this.httpClient.post(this.apiURL + '/watering_log', request).subscribe(log1 => {\n            this.currentLogs.wateringLog.deserialize(log1[0]);\n            this.httpClient.post(this.apiURL + '/sunlight_log', request).subscribe(log2 => {\n                this.currentLogs.sunlightLog.deserialize(log2[0]);\n                this.httpClient.post(this.apiURL + '/temperature_log', request).subscribe(log3 => {\n                    this.currentLogs.temperatureLog.deserialize(log3[0]);\n                    this.logsReady.next(true);\n                });\n            });\n        });\n    }\n\n    public fetchNewLogs(): void {\n        this.httpClient.get(this.apiURL + '/new_logs').subscribe(observer => {\n            this.newLogsReady.next(true);\n        });\n    }\n\n    public fetchWateringLogs(request: LogsRequest): Observable {\n        return this.httpClient.post(this.apiURL + '/watering_log', request);\n    }\n\n    public fetchSunlightLogs(request: LogsRequest): Observable {\n        return this.httpClient.post(this.apiURL + '/sunlight_log', request);\n    }\n\n    public fetchTemperatureLogs(request: LogsRequest): Observable {\n        return this.httpClient.post(this.apiURL + '/temperature_log', request);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogsRequest.html":{"url":"classes/LogsRequest.html","title":"class - LogsRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogsRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Requests.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                plant_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Requests.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            plant_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Requests.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Requests.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport class RewireRequest implements Serializable{\n    \n    current_wired: string;\n    new_wired: string;\n\n    deserialize(value: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\nexport class LogsRequest {\n\n    plant_id: string;\n    limit: number;\n\n    deserialize(value: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHubAlertComponent.html":{"url":"components/MainHubAlertComponent.html","title":"component - MainHubAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainHubAlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-hub-alert\n            \n\n\n\n\n            \n                templateUrl\n                ./main-hub-alert.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'main-hub-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'main-hub-alert',\n  templateUrl: './main-hub-alert.view.html'\n})\nexport class MainHubAlertComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'main-hub-alert';\n\n  public date: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.date = new Date().toLocaleString();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Alerts\n        \n    \n\n\n\n    \n        Overwatered\n        {{date}}\n        Your plant is heavily overwatered!\n    \n\n\n    \n        Not enough sunlight\n        {{date}}\n        Turning on artificial light is recommended.\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Alerts                        Overwatered        {{date}}        Your plant is heavily overwatered!                Not enough sunlight        {{date}}        Turning on artificial light is recommended.    '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainHubAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHubButtonsComponent.html":{"url":"components/MainHubButtonsComponent.html","title":"component - MainHubButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainHubButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-hub-buttons\n            \n\n\n\n\n            \n                templateUrl\n                ./main-hub-buttons.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                artificialLightButtonCaption\n                            \n                            \n                                    Public\n                                toggleLightButtonCaption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentSensorData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preparePDFBody\n                            \n                            \n                                    Public\n                                printPDF\n                            \n                            \n                                    Public\n                                toggleForbidArtificialButton\n                            \n                            \n                                    Public\n                                toggleLightButton\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alControl: ArtificialLightControlService, logControl: LogsControlService, plantControl: PlantControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alControl\n                                                  \n                                                        \n                                                                        ArtificialLightControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logControl\n                                                  \n                                                        \n                                                                        LogsControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'main-hub-buttons'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentSensorData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentSensorData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preparePDFBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preparePDFBody(logs: Log[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logs\n                                    \n                                                Log[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            printPDF\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    printPDF()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleForbidArtificialButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleForbidArtificialButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleLightButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleLightButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            artificialLightButtonCaption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArtificialLightEnum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleLightButtonCaption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToogleEnum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ArtificialLightControlService } from 'src/app/Core/Services/artificial-light-control.service';\ndeclare const require: any;\nconst jsPDF = require('jspdf');\nrequire('jspdf-autotable');\nimport { LogsControlService } from 'src/app/Core/Services/logs-control.service';\nimport { WateringLog, SunlightLog, TemperatureLog, Log, is_Sunlight, is_Temperature, is_Watering } from 'src/app/Core/Models/Logs';\nimport { PlantControlService } from 'src/app/Core/Services/plant-control.service';\nimport { LogsRequest } from 'src/app/Core/Models/Requests';\nimport { addZero, prepareDate } from 'src/app/Core/Models/Plant';\n\nexport enum ToogleEnum {\n  ON = 'ON',\n  OFF = 'OFF'\n}\n\nexport enum ArtificialLightEnum {\n  Allow = 'ALLOW',\n  Forbid = 'FORBID'\n}\n\n@Component({\n  selector: 'main-hub-buttons',\n  templateUrl: './main-hub-buttons.view.html'\n})\nexport class MainHubButtonsComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'main-hub-buttons';\n\n\n  public toggleLightButtonCaption: ToogleEnum;\n  public artificialLightButtonCaption: ArtificialLightEnum;\n\n  constructor(private alControl: ArtificialLightControlService,\n    private logControl: LogsControlService,\n    private plantControl: PlantControlService) {\n    this.alControl.lightStatusReady.subscribe(value => {\n      this.toggleLightButtonCaption = this.alControl.light_status.current == true ? ToogleEnum.ON : ToogleEnum.OFF;\n      this.artificialLightButtonCaption = this.alControl.light_status.artificial == true ? ArtificialLightEnum.Allow : ArtificialLightEnum.Forbid;\n    });\n  }\n\n  public toggleLightButton(): void {\n    this.toggleLightButtonCaption = this.toggleLightButtonCaption === ToogleEnum.ON ? ToogleEnum.OFF : ToogleEnum.ON;\n    this.alControl.switchCurrentLight().subscribe();\n\n  }\n\n  public toggleForbidArtificialButton(): void {\n    this.artificialLightButtonCaption = this.artificialLightButtonCaption === ArtificialLightEnum.Allow ? ArtificialLightEnum.Forbid : ArtificialLightEnum.Allow;\n    this.alControl.switchArtificialLight().subscribe();\n  }\n\n  public getCurrentSensorData(): void {\n    this.logControl.fetchNewLogs();\n  }\n\n  private preparePDFBody(logs: Log[]): any[] {\n    const body: any[] = [];\n    if (is_Sunlight(logs[0])) {\n      logs.forEach(log => {\n        const row: any[] = [];\n        row.push((log as SunlightLog).value + 'lx');\n        if ((log as SunlightLog).artificial) row.push('Yes');\n        else row.push('No');\n        row.push(prepareDate((log as SunlightLog).datetime));\n        body.push(row);\n      })\n      return body;\n    }\n    else if (is_Temperature(logs[0])) {\n      logs.forEach(log => {\n        const row: any[] = [];\n        row.push((log as TemperatureLog).value + '°C');\n        row.push(prepareDate((log as TemperatureLog).datetime));\n        body.push(row);\n      })\n      return body;\n    }\n    else if (is_Watering(logs[0])) {\n      logs.forEach(log => {\n        const row: any[] = [];\n        row.push((log as WateringLog).value + '%');\n        if ((log as WateringLog).dry) row.push('Yes');\n        else row.push('No');\n        if ((log as WateringLog).overwatered) row.push('Yes');\n        else row.push('No');\n        row.push(prepareDate((log as WateringLog).datetime));\n        body.push(row);\n      })\n      return body;\n    }\n    return null;\n  }\n\n  public printPDF(): void {\n    const wateringLogs: WateringLog[] = [];\n    const sunlightLogs: SunlightLog[] = [];\n    const temperatureLogs: TemperatureLog[] = [];\n    const request: LogsRequest = new LogsRequest();\n    request.limit = 0;\n    request.plant_id = this.plantControl.currentlyWired.plant_id;\n    this.logControl.fetchSunlightLogs(request).subscribe(sunValues => {\n      sunValues.forEach(log => {\n        const temp: SunlightLog = new SunlightLog();\n        temp.deserialize(log);\n        sunlightLogs.push(temp);\n      });\n      this.logControl.fetchTemperatureLogs(request).subscribe(tempValues => {\n        tempValues.forEach(log => {\n          const temp: TemperatureLog = new TemperatureLog();\n          temp.deserialize(log);\n          temperatureLogs.push(temp);\n        });\n        this.logControl.fetchWateringLogs(request).subscribe(waterValues => {\n          waterValues.forEach(log => {\n            const temp: WateringLog = new WateringLog();\n            temp.deserialize(log);\n            wateringLogs.push(temp);\n          });\n          const doc = new jsPDF({\n            'orientation': 'landscape'\n          });\n          doc.text('Sunlight Logs', 10, 10);\n          doc.autoTable({\n            head: [['Value', 'Artificial light status', 'Datetime']],\n            body: this.preparePDFBody(sunlightLogs)\n          });\n          doc.addPage();\n          doc.text('Temperature Logs', 10, 10);\n          doc.autoTable({\n            head: [['Value', 'Datetime']],\n            body: this.preparePDFBody(temperatureLogs)\n          });\n          doc.addPage();\n          doc.text('Watering Logs', 10, 10);\n          doc.autoTable({\n            head: [['Value', 'Dry', 'Overwatered', 'Datetime']],\n            body: this.preparePDFBody(wateringLogs)\n          });\n          doc.save(this.plantControl.currentlyWired.family + '-' + this.plantControl.currentlyWired.species + '-' + this.plantControl.currentlyWired.name + '-logs.pdf')\n        })\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.alControl.getLightStatus();\n  }\n}\n\n    \n\n    \n        \n    \n        {{toggleLightButtonCaption}}\n    \n    Toggle artificial light\n\n\n    \n        {{artificialLightButtonCaption}}\n    \n    Artificial light\n\n\n    \n        GET\n    \n    Current sensor data\n\n\n    \n        PRINT\n    \n    Logs to PDF\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{toggleLightButtonCaption}}        Toggle artificial light            {{artificialLightButtonCaption}}        Artificial light            GET        Current sensor data            PRINT        Logs to PDF'\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainHubButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHubComponent.html":{"url":"components/MainHubComponent.html","title":"component - MainHubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainHubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/MainHub/main-hub.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-hub\n            \n\n\n\n\n            \n                templateUrl\n                ./main-hub.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(plantControl: PlantControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/MainHub/main-hub.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'main-hub'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/main-hub.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/main-hub.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\nimport { PlantControlService } from '../Core/Services/plant-control.service';\n\n@Component({\n  selector: 'main-hub',\n  templateUrl: './main-hub.view.html',\n})\nexport class MainHubComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'main-hub';\n\n  constructor(private plantControl: PlantControlService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n        {{plantControl.currentlyWired.family}} {{plantControl.currentlyWired.species}}\n    \n    \n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{plantControl.currentlyWired.family}} {{plantControl.currentlyWired.species}}            '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainHubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHubGraphComponent.html":{"url":"components/MainHubGraphComponent.html","title":"component - MainHubGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainHubGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-hub-graph\n            \n\n\n\n\n            \n                templateUrl\n                ./main-hub-graph.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                soilMoistureDataSource\n                            \n                            \n                                    Public\n                                soilMoistureHeight\n                            \n                            \n                                    Public\n                                soilMoistureWidth\n                            \n                            \n                                    Public\n                                sunlightDataSource\n                            \n                            \n                                    Public\n                                sunlightHeight\n                            \n                            \n                                    Public\n                                sunlightWidth\n                            \n                            \n                                    Public\n                                temperatureDataSource\n                            \n                            \n                                    Public\n                                temperatureHeight\n                            \n                            \n                                    Public\n                                temperatureWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateChartData\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logsControl: LogsControlService, plantControl: PlantControlService, alControl: ArtificialLightControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsControl\n                                                  \n                                                        \n                                                                        LogsControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alControl\n                                                  \n                                                        \n                                                                        ArtificialLightControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'main-hub-graph'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChartData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChartData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            soilMoistureDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            soilMoistureHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            soilMoistureWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunlightDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunlightHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunlightWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\nimport { LogsControlService } from 'src/app/Core/Services/logs-control.service';\nimport { PlantControlService } from 'src/app/Core/Services/plant-control.service';\nimport { ArtificialLightControlService } from 'src/app/Core/Services/artificial-light-control.service';\n\n@Component({\n  selector: 'main-hub-graph',\n  templateUrl: './main-hub-graph.view.html'\n})\nexport class MainHubGraphComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'main-hub-graph';\n\n  public temperatureDataSource: any;\n  public soilMoistureDataSource: any;\n  public sunlightDataSource: any;\n  public soilMoistureWidth: number;\n  public soilMoistureHeight: number;\n  public sunlightHeight: number;\n  public sunlightWidth: number;\n  public temperatureHeight: number;\n  public temperatureWidth: number;\n\n  constructor(private logsControl: LogsControlService,\n              private plantControl: PlantControlService,\n              private alControl: ArtificialLightControlService) {\n      this.temperatureDataSource = {\n      'chart': {\n        'caption': 'Temperature Monitor',\n        'lowerlimit': '-10',\n        'upperlimit': '50',\n        'decimals': '1',\n        'numbersuffix': '°C',\n        'showhovereffect': '1',\n        'thmfillcolor': '#7f8942',\n        'showgaugeborder': '1',\n        'gaugebordercolor': '#008ee4',\n        'gaugeborderthickness': '2',\n        'gaugeborderalpha': '30',\n        'thmoriginx': '100',\n        'chartbottommargin': '20',\n        'valuefontcolor': '#000000',\n        'showvalue': '1',\n        'theme': 'fusion'\n      },\n      'value': 0,\n      'annotations': {\n        'showbelow': '1',\n      }\n    };\n    this.sunlightDataSource = {\n      'chart': {\n        'caption': 'Light level status',\n        'upperlimit': '65535',\n        'lowerlimit': '0',\n        'captionPadding': '30',\n        'showshadow': '0',\n        'showvalue': '1',\n        'useColorNameAsValue': '1',\n        'placeValuesInside': '1',\n        'valueFontSize': '16',\n        'plottooltext': 'Current light intensivity:{br}$value lx',\n        'theme': 'fusion'\n      },\n      'colorrange': {\n        'color': [\n          {\n            'minvalue': '0',\n            'maxvalue': '5000',\n            'label': 'It\\'s too dark  (unless it\\'s night-time)',\n            'code': '#cccccc'\n          },\n          {\n            'minvalue': '5000',\n            'maxvalue': '15000',\n            'label': 'A bit cloudy',\n            'code': '#82baa9'\n          },\n          {\n            'minvalue': '15000',\n            'maxvalue': '65535',\n            'label': 'Bright and sunny!',\n            'code': '#ffd756'\n          }\n        ]\n      },\n      'value': 0\n    };\n    this.soilMoistureDataSource = {\n      'chart': {\n        'caption': 'Current soil moisture',\n        'renderAt': 'chartContainer',\n        'lowerLimit': '0',\n        'upperLimit': '100',\n        'showValue': '1',\n        'numberSuffix': '',\n        'theme': 'fusion',\n        'showToolTip': '0'\n      },\n      'colorRange': {\n        'color': [{\n          'minValue': '0',\n          'maxValue': '45',\n          'code': '#7f8942'\n        }, {\n          'minValue': '45',\n          'maxValue': '70',\n          'code': '#ffd756'\n        }, {\n          'minValue': '70',\n          'maxValue': '100',\n          'code': '#cc4b37'\n        }]\n      },\n      'dials': {\n        'dial': [{\n          'value': 0\n        }]\n      }\n    };\n    this.plantControl.plantsReady.subscribe( value => {\n      this.logsControl.getLastLogs(this.plantControl.currentlyWired);\n    });\n    this.logsControl.logsReady.subscribe( value => {\n      this.updateChartData();\n    })\n    this.logsControl.newLogsReady.subscribe( value => {\n      this.logsControl.getLastLogs(this.plantControl.currentlyWired);\n      this.alControl.getLightStatus();\n    })\n  }\n\n  private updateChartData() {\n    this.soilMoistureDataSource['dials']['dial'][0]['value'] = this.logsControl.currentLogs.wateringLog.value;\n    this.sunlightDataSource.value = this.logsControl.currentLogs.sunlightLog.value;\n\n    this.temperatureDataSource.value = this.logsControl.currentLogs.temperatureLog.value;\n    if (this.logsControl.currentLogs.temperatureLog.value  10 && this.logsControl.currentLogs.temperatureLog.value  16) {\n      this.temperatureDataSource.chart.thmFillColor = '#7f8942';\n    }\n  }\n\n  ngOnInit() {\n    this.soilMoistureHeight = 200;\n    this.soilMoistureWidth = 320;\n\n    this.sunlightHeight = 250;\n    this.sunlightWidth = 250;\n\n    this.temperatureHeight = 250;\n    this.temperatureWidth = 200;\n    \n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n        \n    \n\n\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainHubGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainHubModule.html":{"url":"modules/MainHubModule.html","title":"module - MainHubModule","body":"\n                   \n\n\n\n\n    Modules\n    MainHubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainHubModule\n\n\n\ncluster_MainHubModule_declarations\n\n\n\ncluster_MainHubModule_exports\n\n\n\n\nMainHubAlertComponent\n\nMainHubAlertComponent\n\n\n\nMainHubModule\n\nMainHubModule\n\nMainHubModule -->\n\nMainHubAlertComponent->MainHubModule\n\n\n\n\n\nMainHubButtonsComponent\n\nMainHubButtonsComponent\n\nMainHubModule -->\n\nMainHubButtonsComponent->MainHubModule\n\n\n\n\n\nMainHubComponent\n\nMainHubComponent\n\nMainHubModule -->\n\nMainHubComponent->MainHubModule\n\n\n\n\n\nMainHubGraphComponent\n\nMainHubGraphComponent\n\nMainHubModule -->\n\nMainHubGraphComponent->MainHubModule\n\n\n\n\n\nMainHubAlertComponent \n\nMainHubAlertComponent \n\nMainHubAlertComponent  -->\n\nMainHubModule->MainHubAlertComponent \n\n\n\n\n\nMainHubButtonsComponent \n\nMainHubButtonsComponent \n\nMainHubButtonsComponent  -->\n\nMainHubModule->MainHubButtonsComponent \n\n\n\n\n\nMainHubComponent \n\nMainHubComponent \n\nMainHubComponent  -->\n\nMainHubModule->MainHubComponent \n\n\n\n\n\nMainHubGraphComponent \n\nMainHubGraphComponent \n\nMainHubGraphComponent  -->\n\nMainHubModule->MainHubGraphComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/MainHub/main-hub.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainHubAlertComponent\n                        \n                        \n                            MainHubButtonsComponent\n                        \n                        \n                            MainHubComponent\n                        \n                        \n                            MainHubGraphComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainHubAlertComponent\n                        \n                        \n                            MainHubButtonsComponent\n                        \n                        \n                            MainHubComponent\n                        \n                        \n                            MainHubGraphComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\n\nimport { MainHubComponent } from './main-hub.component';\nimport { MainHubAlertComponent } from './MainHubAlertComponent/main-hub-alert.component';\nimport { MainHubGraphComponent } from './MainHubGraphComponent/main-hub-graph.component';\nimport { MainHubButtonsComponent } from './MainHubButtonsControler/main-hub-buttons.component';\n\nimport { FusionChartsModule } from 'angular-fusioncharts';\nimport * as FusionCharts from 'fusioncharts';\nimport * as Widgets from 'fusioncharts/fusioncharts.widgets';\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nFusionChartsModule.fcRoot(FusionCharts, Widgets, FusionTheme);\n\n@NgModule({\n    declarations: [\n        MainHubComponent, MainHubAlertComponent, MainHubGraphComponent, MainHubButtonsComponent\n    ],\n    imports: [\n        CommonModule, HttpModule, FusionChartsModule\n    ],\n    providers: [],\n    exports: [MainHubComponent, MainHubAlertComponent, MainHubGraphComponent, MainHubButtonsComponent]\n  })\n  export class MainHubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navbar\n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.view.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bsModalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openAddNewPlantModal\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, plantControl: PlantControlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Navbar/navbar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plantControl\n                                                  \n                                                        \n                                                                        PlantControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'navbar'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openAddNewPlantModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddNewPlantModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bsModalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AddNewPlantComponent } from '../AddNewPlant/add-new-plant.component';\nimport { PlantControlService } from '../Core/Services/plant-control.service';\nimport { Plant } from '../Core/Models/Plant';\nimport { RewireRequest } from '../Core/Models/Requests';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.view.html'\n})\nexport class NavbarComponent implements OnInit {\n\n  @HostBinding('class') styleClass = 'navbar';\n\n  private bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService,\n              private plantControl: PlantControlService) {\n    this.modalService.onHide.subscribe( observer => {\n      this.plantControl.getAllPlants();\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  public openAddNewPlantModal() {\n    const initialState = {\n      list: [],\n      title: 'Add new plant'\n    };\n    this.bsModalRef = this.modalService.show(AddNewPlantComponent, {initialState});\n    this.bsModalRef.content.closeBtnName = 'Close';    \n  }\n\n}\n\n    \n\n    \n        \n  {{plant.name}}\n  \n    \n  \n  \n    Information\n    \n    Alerts\n    \n    Graphs\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{plant.name}}              Information        Alerts        Graphs  '\n    var COMPONENTS = [{'name': 'AddNewPlantComponent', 'selector': 'add-new-plant'},{'name': 'AlertsHubComponent', 'selector': 'alerts-hub'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsHubComponent', 'selector': 'graphs-hub'},{'name': 'HeaderComponent', 'selector': 'main-header'},{'name': 'InformationHubComponent', 'selector': 'information-hub'},{'name': 'MainHubAlertComponent', 'selector': 'main-hub-alert'},{'name': 'MainHubButtonsComponent', 'selector': 'main-hub-buttons'},{'name': 'MainHubComponent', 'selector': 'main-hub'},{'name': 'MainHubGraphComponent', 'selector': 'main-hub-graph'},{'name': 'NavbarComponent', 'selector': 'navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plant.html":{"url":"classes/Plant.html","title":"class - Plant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Plant.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                family\n                            \n                            \n                                name\n                            \n                            \n                                plant_id\n                            \n                            \n                                species\n                            \n                            \n                                wired\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            family\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            plant_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            species\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wired\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Plant.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Plant.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function addZero(number: number): string {\n    return number > 9 ? number.toString() : '0' + number;\n  }\n\nexport function prepareDate(date: Date): string {\n    return addZero(date.getUTCDay()) + '.' + addZero(date.getUTCMonth()) + '.' + date.getUTCFullYear() + ' ' + addZero(date.getUTCHours()) + ':' + addZero(date.getUTCMinutes());\n  }\n\nexport class Plant implements Serializable{\n\n    plant_id: string;\n    wired: boolean;\n    species: string;\n    family: string;\n    name: string;\n    created: Date;\n\n    deserialize(value: any): void {\n        if (value != null) {\n            this.created = value.created != null ? new Date(value.created): null;\n            this.species = value.species;\n            this.family = value.family;\n            this.name = value.name;\n            if (value.id) this.plant_id = value.id;\n            else if (value.plant_id) this.plant_id = value.plant_id;\n            this.wired = value.wired;\n        } \n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlantControlService.html":{"url":"injectables/PlantControlService.html","title":"injectable - PlantControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlantControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/plant-control.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                            \n                                    Public\n                                currentlyWired\n                            \n                            \n                                    Public\n                                plants\n                            \n                            \n                                    Public\n                                plantsReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPlant\n                            \n                            \n                                    Public\n                                deletePlant\n                            \n                            \n                                    Public\n                                getAllPlants\n                            \n                            \n                                    Public\n                                rewirePlants\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/plant-control.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPlant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPlant(newPlant: Plant)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/plant-control.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPlant\n                                    \n                                                Plant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deletePlant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePlant(plant: Plant)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/plant-control.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plant\n                                    \n                                                Plant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPlants\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPlants()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/plant-control.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rewirePlants\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rewirePlants(plant: Plant)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Services/plant-control.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plant\n                                    \n                                                Plant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.0.24:5000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/plant-control.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentlyWired\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Plant\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/plant-control.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Plant[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/plant-control.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plantsReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Services/plant-control.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Plant } from '../Models/Plant';\nimport { RewireRequest } from '../Models/Requests';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlantControlService {\n\n  public plantsReady: EventEmitter = new EventEmitter();\n  public plants: Plant[] = [];\n  public currentlyWired: Plant;\n  private apiURL: string = 'http://192.168.0.24:5000';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public createPlant(newPlant: Plant): Observable {\n    return this.httpClient.post(this.apiURL + '/new_plant', newPlant);\n  }\n\n  public deletePlant(plant: Plant): Observable {\n    return this.httpClient.post(this.apiURL + '/delete_plant', plant);\n  }\n\n  public getAllPlants(): void {\n    this.httpClient.get(this.apiURL + '/all_plants').subscribe(value => {\n      if (this.plants.length != value['plants'].length) {\n        this.plants = [];\n        value['plants'].forEach(plant => {\n          const temp: Plant = new Plant();\n          temp.deserialize(plant);\n          this.plants.push(temp);\n        });\n        this.currentlyWired = this.plants.filter(plant => plant.wired === true)[0];\n        this.plantsReady.next(true);\n      }\n    });\n  }\n\n  public rewirePlants(plant: Plant): void{\n    const request: RewireRequest = new RewireRequest();\n    request.current_wired = this.currentlyWired.plant_id;\n    request.new_wired = plant.plant_id;\n    this.httpClient.post(this.apiURL + '/rewire', request).subscribe(value => {\n        this.currentlyWired = plant;\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RewireRequest.html":{"url":"classes/RewireRequest.html","title":"class - RewireRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RewireRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Requests.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_wired\n                            \n                            \n                                new_wired\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current_wired\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Requests.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            new_wired\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Requests.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Requests.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport class RewireRequest implements Serializable{\n    \n    current_wired: string;\n    new_wired: string;\n\n    deserialize(value: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\nexport class LogsRequest {\n\n    plant_id: string;\n    limit: number;\n\n    deserialize(value: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Serializable.html":{"url":"interfaces/Serializable.html","title":"interface - Serializable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Serializable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Serializable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Serializable.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { serializePath } from \"@angular/router/src/url_tree\";\n\nexport interface Serializable {\n    \n    deserialize(value: any): void;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SunlightLog.html":{"url":"classes/SunlightLog.html","title":"class - SunlightLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SunlightLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Logs.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Log\n            \n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artificial\n                            \n                            \n                                datetime\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artificial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:17\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(logValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Logs.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function is_Sunlight(log: Log) {\n    return log instanceof SunlightLog;\n}\n\nexport function is_Temperature(log: Log) {\n    return log instanceof TemperatureLog;\n}\n\nexport function is_Watering(log: Log) {\n    return log instanceof WateringLog;\n}\n\nexport abstract class Log {\n    datetime: Date;\n    value: number;\n}\n\nexport class SunlightLog extends Log implements Serializable {\n    artificial: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.artificial = logValue.artificial;\n        } \n    }\n}\n\nexport class TemperatureLog extends Log implements Serializable {\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n        } \n    }\n}\n\nexport class WateringLog extends Log implements Serializable {\n    dry: boolean;\n    overwatered: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.dry = logValue.dry;\n            this.overwatered = logValue.overwatered\n        } \n    }\n}\n\nexport class CurrentLogs {\n    wateringLog: WateringLog;\n    sunlightLog: SunlightLog;\n    temperatureLog: TemperatureLog;\n\n    constructor() {\n        this.sunlightLog = new SunlightLog();\n        this.temperatureLog = new TemperatureLog();\n        this.wateringLog = new WateringLog();\n        this.temperatureLog.value = 0;\n        this.wateringLog.value = 0;\n        this.sunlightLog.value = 0;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemperatureLog.html":{"url":"classes/TemperatureLog.html","title":"class - TemperatureLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemperatureLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Logs.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Log\n            \n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datetime\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:17\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(logValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Logs.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function is_Sunlight(log: Log) {\n    return log instanceof SunlightLog;\n}\n\nexport function is_Temperature(log: Log) {\n    return log instanceof TemperatureLog;\n}\n\nexport function is_Watering(log: Log) {\n    return log instanceof WateringLog;\n}\n\nexport abstract class Log {\n    datetime: Date;\n    value: number;\n}\n\nexport class SunlightLog extends Log implements Serializable {\n    artificial: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.artificial = logValue.artificial;\n        } \n    }\n}\n\nexport class TemperatureLog extends Log implements Serializable {\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n        } \n    }\n}\n\nexport class WateringLog extends Log implements Serializable {\n    dry: boolean;\n    overwatered: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.dry = logValue.dry;\n            this.overwatered = logValue.overwatered\n        } \n    }\n}\n\nexport class CurrentLogs {\n    wateringLog: WateringLog;\n    sunlightLog: SunlightLog;\n    temperatureLog: TemperatureLog;\n\n    constructor() {\n        this.sunlightLog = new SunlightLog();\n        this.temperatureLog = new TemperatureLog();\n        this.wateringLog = new WateringLog();\n        this.temperatureLog.value = 0;\n        this.wateringLog.value = 0;\n        this.sunlightLog.value = 0;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WateringLog.html":{"url":"classes/WateringLog.html","title":"class - WateringLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WateringLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Models/Logs.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Log\n            \n\n            \n                Implements\n            \n            \n                            Serializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dry\n                            \n                            \n                                overwatered\n                            \n                            \n                                datetime\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            overwatered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Core/Models/Logs.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datetime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Log\n\n                                \n                            \n                        \n                            \n                                    Defined in         Log:17\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(logValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Core/Models/Logs.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Serializable } from \"./Serializable\";\n\nexport function is_Sunlight(log: Log) {\n    return log instanceof SunlightLog;\n}\n\nexport function is_Temperature(log: Log) {\n    return log instanceof TemperatureLog;\n}\n\nexport function is_Watering(log: Log) {\n    return log instanceof WateringLog;\n}\n\nexport abstract class Log {\n    datetime: Date;\n    value: number;\n}\n\nexport class SunlightLog extends Log implements Serializable {\n    artificial: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.artificial = logValue.artificial;\n        } \n    }\n}\n\nexport class TemperatureLog extends Log implements Serializable {\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n        } \n    }\n}\n\nexport class WateringLog extends Log implements Serializable {\n    dry: boolean;\n    overwatered: boolean;\n\n    deserialize(logValue: any): void {\n        if (logValue != null) {\n            this.datetime = logValue.datetime != null ? new Date(logValue.datetime): null;\n            this.value = logValue.value;\n            this.dry = logValue.dry;\n            this.overwatered = logValue.overwatered\n        } \n    }\n}\n\nexport class CurrentLogs {\n    wateringLog: WateringLog;\n    sunlightLog: SunlightLog;\n    temperatureLog: TemperatureLog;\n\n    constructor() {\n        this.sunlightLog = new SunlightLog();\n        this.temperatureLog = new TemperatureLog();\n        this.wateringLog = new WateringLog();\n        this.temperatureLog.value = 0;\n        this.wateringLog.value = 0;\n        this.sunlightLog.value = 0;\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/AddNewPlant/add-new-plant.component.ts\n            \n            component\n            AddNewPlantComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/AlertsHub/alerts-hub.component.ts\n            \n            component\n            AlertsHubComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Alert.ts\n            \n            class\n            Alert\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/Models/ArtificialLight.ts\n            \n            class\n            ArtificialLight\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            class\n            CurrentLogs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            class\n            Log\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            class\n            SunlightLog\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            class\n            TemperatureLog\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            class\n            WateringLog\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            function\n            is_Sunlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            function\n            is_Temperature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Logs.ts\n            \n            function\n            is_Watering\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Plant.ts\n            \n            class\n            Plant\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Plant.ts\n            \n            function\n            addZero\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Plant.ts\n            \n            function\n            prepareDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Requests.ts\n            \n            class\n            LogsRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Requests.ts\n            \n            class\n            RewireRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/Models/Serializable.ts\n            \n            interface\n            Serializable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/Core/Services/alerts-control.service.ts\n            \n            injectable\n            AlertsControlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/Services/artificial-light-control.service.ts\n            \n            injectable\n            ArtificialLightControlService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Core/Services/logs-control.service.ts\n            \n            injectable\n            LogsControlService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Core/Services/plant-control.service.ts\n            \n            injectable\n            PlantControlService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/GraphsHub/graphs-hub.component.ts\n            \n            component\n            GraphsHubComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/InformationHub/information-hub.component.ts\n            \n            component\n            InformationHubComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/MainHub/MainHubAlertComponent/main-hub-alert.component.ts\n            \n            component\n            MainHubAlertComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n            \n            component\n            MainHubButtonsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n            \n            variable\n            jsPDF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/MainHub/MainHubGraphComponent/main-hub-graph.component.ts\n            \n            component\n            MainHubGraphComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/MainHub/main-hub.component.ts\n            \n            component\n            MainHubComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.4\n        \n            @angular/common : ^7.0.4\n        \n            @angular/compiler : ^7.0.4\n        \n            @angular/core : ^7.0.4\n        \n            @angular/forms : ^7.0.4\n        \n            @angular/http : ^7.0.4\n        \n            @angular/platform-browser : ^7.0.4\n        \n            @angular/platform-browser-dynamic : ^7.0.4\n        \n            @angular/router : ^7.0.4\n        \n            @types/jspdf : ^1.2.2\n        \n            angular-fusioncharts : ^3.0.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.5\n        \n            fusioncharts : ^3.13.4\n        \n            jspdf : ^1.5.3\n        \n            jspdf-autotable : ^3.0.13\n        \n            ngx-bootstrap : ^3.2.0\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArtificialLightEnum   (src/.../main-hub-buttons.component.ts)\n                        \n                        \n                            ToogleEnum   (src/.../main-hub-buttons.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ArtificialLightEnum\n                    \n                \n                        \n                            \n                                 Allow\n                            \n                        \n                        \n                            \n                                Value : ALLOW\n                            \n                        \n                        \n                            \n                                 Forbid\n                            \n                        \n                        \n                            \n                                Value : FORBID\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ToogleEnum\n                    \n                \n                        \n                            \n                                 ON\n                            \n                        \n                        \n                            \n                                Value : ON\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : OFF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addZero   (src/.../Plant.ts)\n                        \n                        \n                            is_Sunlight   (src/.../Logs.ts)\n                        \n                        \n                            is_Temperature   (src/.../Logs.ts)\n                        \n                        \n                            is_Watering   (src/.../Logs.ts)\n                        \n                        \n                            prepareDate   (src/.../Plant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/Models/Plant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addZero\n                        \n                        \n                    \n                \n            \n            \n                \naddZero(number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareDate\n                        \n                        \n                    \n                \n            \n            \n                \nprepareDate(date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/Core/Models/Logs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            is_Sunlight\n                        \n                        \n                    \n                \n            \n            \n                \nis_Sunlight(log)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is_Temperature\n                        \n                        \n                    \n                \n            \n            \n                \nis_Temperature(log)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is_Watering\n                        \n                        \n                    \n                \n            \n            \n                \nis_Watering(log)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWiredPlant\nThis project was generated with Angular CLI version 7.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddNewPlantModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AlertsHubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsHubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InformationHubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainHubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddNewPlantModule\n\n\n\ncluster_AddNewPlantModule_declarations\n\n\n\ncluster_AddNewPlantModule_exports\n\n\n\ncluster_AlertsHubModule\n\n\n\ncluster_AlertsHubModule_declarations\n\n\n\ncluster_AlertsHubModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsHubModule\n\n\n\ncluster_GraphsHubModule_declarations\n\n\n\ncluster_GraphsHubModule_exports\n\n\n\ncluster_InformationHubModule\n\n\n\ncluster_InformationHubModule_declarations\n\n\n\ncluster_InformationHubModule_exports\n\n\n\ncluster_MainHubModule\n\n\n\ncluster_MainHubModule_declarations\n\n\n\ncluster_MainHubModule_exports\n\n\n\n\nAddNewPlantComponent\n\nAddNewPlantComponent\n\n\n\nAddNewPlantModule\n\nAddNewPlantModule\n\nAddNewPlantModule -->\n\nAddNewPlantComponent->AddNewPlantModule\n\n\n\n\n\nAddNewPlantComponent \n\nAddNewPlantComponent \n\nAddNewPlantComponent  -->\n\nAddNewPlantModule->AddNewPlantComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddNewPlantModule->AppModule\n\n\n\n\n\nAlertsHubComponent\n\nAlertsHubComponent\n\n\n\nAlertsHubModule\n\nAlertsHubModule\n\nAlertsHubModule -->\n\nAlertsHubComponent->AlertsHubModule\n\n\n\n\n\nAlertsHubComponent \n\nAlertsHubComponent \n\nAlertsHubComponent  -->\n\nAlertsHubModule->AlertsHubComponent \n\n\n\nAppModule -->\n\nAlertsHubModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphsHubModule\n\nGraphsHubModule\n\nAppModule -->\n\nGraphsHubModule->AppModule\n\n\n\n\n\nGraphsHubComponent \n\nGraphsHubComponent \n\nGraphsHubComponent  -->\n\nGraphsHubModule->GraphsHubComponent \n\n\n\n\n\nInformationHubModule\n\nInformationHubModule\n\nAppModule -->\n\nInformationHubModule->AppModule\n\n\n\n\n\nInformationHubComponent \n\nInformationHubComponent \n\nInformationHubComponent  -->\n\nInformationHubModule->InformationHubComponent \n\n\n\n\n\nMainHubModule\n\nMainHubModule\n\nAppModule -->\n\nMainHubModule->AppModule\n\n\n\n\n\nMainHubAlertComponent \n\nMainHubAlertComponent \n\nMainHubAlertComponent  -->\n\nMainHubModule->MainHubAlertComponent \n\n\n\n\n\nMainHubButtonsComponent \n\nMainHubButtonsComponent \n\nMainHubButtonsComponent  -->\n\nMainHubModule->MainHubButtonsComponent \n\n\n\n\n\nMainHubComponent \n\nMainHubComponent \n\nMainHubComponent  -->\n\nMainHubModule->MainHubComponent \n\n\n\n\n\nMainHubGraphComponent \n\nMainHubGraphComponent \n\nMainHubGraphComponent  -->\n\nMainHubModule->MainHubGraphComponent \n\n\n\n\n\nGraphsHubComponent\n\nGraphsHubComponent\n\nGraphsHubModule -->\n\nGraphsHubComponent->GraphsHubModule\n\n\n\n\n\nInformationHubComponent\n\nInformationHubComponent\n\nInformationHubModule -->\n\nInformationHubComponent->InformationHubModule\n\n\n\n\n\nMainHubAlertComponent\n\nMainHubAlertComponent\n\nMainHubModule -->\n\nMainHubAlertComponent->MainHubModule\n\n\n\n\n\nMainHubButtonsComponent\n\nMainHubButtonsComponent\n\nMainHubModule -->\n\nMainHubButtonsComponent->MainHubModule\n\n\n\n\n\nMainHubComponent\n\nMainHubComponent\n\nMainHubModule -->\n\nMainHubComponent->MainHubModule\n\n\n\n\n\nMainHubGraphComponent\n\nMainHubGraphComponent\n\nMainHubModule -->\n\nMainHubGraphComponent->MainHubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            jsPDF   (src/.../main-hub-buttons.component.ts)\n                        \n                        \n                            require   (src/.../main-hub-buttons.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/MainHub/MainHubButtonsControler/main-hub-buttons.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jsPDF\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('jspdf')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
